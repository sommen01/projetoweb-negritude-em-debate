{
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\rafae\\\\Desktop\\\\web3\\\\projetoweb-negritude-em-debate\\\\api\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\rafae\\\\Desktop\\\\web3\\\\projetoweb-negritude-em-debate\",\"filename\":\"C:\\\\Users\\\\rafae\\\\Desktop\\\\web3\\\\projetoweb-negritude-em-debate\\\\api\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\rafae\\\\Desktop\\\\web3\\\\projetoweb-negritude-em-debate\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate",
      "filename": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "const express = require(\"express\");\n\nconst app = express();\n\nconst path = require('path');\n\nrequire('dotenv').config(); //http://expressjs.com/en/resources/middleware/cors.html\n\n\nconst cors = require('cors');\n\nconst routes = require('./routes/index');\n\nvar corsOptions = {\n  exposedHeaders: 'Authorization'\n};\napp.use(cors(corsOptions));\n/**\r\n * Configuração do parser para requisições post\r\n */\n\napp.use(express.json());\napp.use(express.urlencoded({\n  extended: true\n}));\n/**\r\n* Colocar servidor no ar\r\n*/\n\nconst PORTA = process.env.PORT || 8080;\napp.listen(PORTA, function () {\n  console.log(`Servidor rodando na porta ${PORTA}`);\n});\n/**\r\n  * Configurações das páginas\r\n  */\n\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'pug');\napp.use(express.static(path.join(__dirname, 'static')));\napp.use('/uploads', express.static(path.join(__dirname, '../uploads/')));\n/**\r\n * Rotas\r\n */\n\nroutes(app); // app.set('views', path.join(__dirname, './views'));\n// app.set('view engine','ejs');\n// app.engine('html', require('ejs').renderFile);\n\nmodule.exports = app;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImV4cHJlc3MiLCJyZXF1aXJlIiwiYXBwIiwicGF0aCIsImNvbmZpZyIsImNvcnMiLCJyb3V0ZXMiLCJjb3JzT3B0aW9ucyIsImV4cG9zZWRIZWFkZXJzIiwidXNlIiwianNvbiIsInVybGVuY29kZWQiLCJleHRlbmRlZCIsIlBPUlRBIiwicHJvY2VzcyIsImVudiIsIlBPUlQiLCJsaXN0ZW4iLCJjb25zb2xlIiwibG9nIiwic2V0Iiwiam9pbiIsIl9fZGlybmFtZSIsInN0YXRpYyIsIm1vZHVsZSIsImV4cG9ydHMiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLE9BQU8sR0FBR0MsT0FBTyxDQUFDLFNBQUQsQ0FBdkI7O0FBQ0EsTUFBTUMsR0FBRyxHQUFHRixPQUFPLEVBQW5COztBQUNBLE1BQU1HLElBQUksR0FBR0YsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBRUFBLE9BQU8sQ0FBQyxRQUFELENBQVAsQ0FBa0JHLE1BQWxCLEcsQ0FDQTs7O0FBQ0EsTUFBTUMsSUFBSSxHQUFHSixPQUFPLENBQUMsTUFBRCxDQUFwQjs7QUFDQSxNQUFNSyxNQUFNLEdBQUdMLE9BQU8sQ0FBQyxnQkFBRCxDQUF0Qjs7QUFFQSxJQUFJTSxXQUFXLEdBQUc7QUFDZEMsRUFBQUEsY0FBYyxFQUFFO0FBREYsQ0FBbEI7QUFJQU4sR0FBRyxDQUFDTyxHQUFKLENBQVFKLElBQUksQ0FBQ0UsV0FBRCxDQUFaO0FBRUE7QUFDQTtBQUNBOztBQUNBTCxHQUFHLENBQUNPLEdBQUosQ0FBUVQsT0FBTyxDQUFDVSxJQUFSLEVBQVI7QUFDQVIsR0FBRyxDQUFDTyxHQUFKLENBQVFULE9BQU8sQ0FBQ1csVUFBUixDQUFtQjtBQUN2QkMsRUFBQUEsUUFBUSxFQUFFO0FBRGEsQ0FBbkIsQ0FBUjtBQUlBO0FBQ0E7QUFDQTs7QUFDQSxNQUFNQyxLQUFLLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxJQUFaLElBQW9CLElBQWxDO0FBQ0FkLEdBQUcsQ0FBQ2UsTUFBSixDQUFXSixLQUFYLEVBQWtCLFlBQVk7QUFDMUJLLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFhLDZCQUE0Qk4sS0FBTSxFQUEvQztBQUNILENBRkQ7QUFJQTtBQUNBO0FBQ0E7O0FBQ0NYLEdBQUcsQ0FBQ2tCLEdBQUosQ0FBUSxPQUFSLEVBQWlCakIsSUFBSSxDQUFDa0IsSUFBTCxDQUFVQyxTQUFWLEVBQW9CLE9BQXBCLENBQWpCO0FBQ0FwQixHQUFHLENBQUNrQixHQUFKLENBQVEsYUFBUixFQUFzQixLQUF0QjtBQUNBbEIsR0FBRyxDQUFDTyxHQUFKLENBQVFULE9BQU8sQ0FBQ3VCLE1BQVIsQ0FBZXBCLElBQUksQ0FBQ2tCLElBQUwsQ0FBVUMsU0FBVixFQUFxQixRQUFyQixDQUFmLENBQVI7QUFDQXBCLEdBQUcsQ0FBQ08sR0FBSixDQUFRLFVBQVIsRUFBb0JULE9BQU8sQ0FBQ3VCLE1BQVIsQ0FBZXBCLElBQUksQ0FBQ2tCLElBQUwsQ0FBVUMsU0FBVixFQUFxQixhQUFyQixDQUFmLENBQXBCO0FBRUQ7QUFDQTtBQUNBOztBQUNDaEIsTUFBTSxDQUFDSixHQUFELENBQU4sQyxDQUtEO0FBQ0E7QUFDQTs7QUFDQXNCLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQnZCLEdBQWpCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xccmFmYWVcXERlc2t0b3BcXHdlYjNcXHByb2pldG93ZWItbmVncml0dWRlLWVtLWRlYmF0ZVxcYXBpXFwiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBleHByZXNzID0gcmVxdWlyZShcImV4cHJlc3NcIilcclxuY29uc3QgYXBwID0gZXhwcmVzcygpXHJcbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJylcclxuXHJcbnJlcXVpcmUoJ2RvdGVudicpLmNvbmZpZygpXHJcbi8vaHR0cDovL2V4cHJlc3Nqcy5jb20vZW4vcmVzb3VyY2VzL21pZGRsZXdhcmUvY29ycy5odG1sXHJcbmNvbnN0IGNvcnMgPSByZXF1aXJlKCdjb3JzJyk7XHJcbmNvbnN0IHJvdXRlcyA9IHJlcXVpcmUoJy4vcm91dGVzL2luZGV4Jyk7XHJcblxyXG52YXIgY29yc09wdGlvbnMgPSB7XHJcbiAgICBleHBvc2VkSGVhZGVyczogJ0F1dGhvcml6YXRpb24nXHJcbn1cclxuXHJcbmFwcC51c2UoY29ycyhjb3JzT3B0aW9ucykpO1xyXG5cclxuLyoqXHJcbiAqIENvbmZpZ3VyYcOnw6NvIGRvIHBhcnNlciBwYXJhIHJlcXVpc2nDp8O1ZXMgcG9zdFxyXG4gKi9cclxuYXBwLnVzZShleHByZXNzLmpzb24oKSk7XHJcbmFwcC51c2UoZXhwcmVzcy51cmxlbmNvZGVkKHtcclxuICAgIGV4dGVuZGVkOiB0cnVlXHJcbn0pKVxyXG5cclxuLyoqXHJcbiogQ29sb2NhciBzZXJ2aWRvciBubyBhclxyXG4qL1xyXG5jb25zdCBQT1JUQSA9IHByb2Nlc3MuZW52LlBPUlQgfHwgODA4MDtcclxuYXBwLmxpc3RlbihQT1JUQSwgZnVuY3Rpb24gKCkge1xyXG4gICAgY29uc29sZS5sb2coYFNlcnZpZG9yIHJvZGFuZG8gbmEgcG9ydGEgJHtQT1JUQX1gKVxyXG59KVxyXG5cclxuLyoqXHJcbiAgKiBDb25maWd1cmHDp8O1ZXMgZGFzIHDDoWdpbmFzXHJcbiAgKi9cclxuIGFwcC5zZXQoJ3ZpZXdzJywgcGF0aC5qb2luKF9fZGlybmFtZSwndmlld3MnKSlcclxuIGFwcC5zZXQoJ3ZpZXcgZW5naW5lJywncHVnJylcclxuIGFwcC51c2UoZXhwcmVzcy5zdGF0aWMocGF0aC5qb2luKF9fZGlybmFtZSwgJ3N0YXRpYycpKSk7XHJcbiBhcHAudXNlKCcvdXBsb2FkcycsIGV4cHJlc3Muc3RhdGljKHBhdGguam9pbihfX2Rpcm5hbWUsICcuLi91cGxvYWRzLycpKSk7XHJcblxyXG4vKipcclxuICogUm90YXNcclxuICovXHJcbiByb3V0ZXMoYXBwKTtcclxuXHJcblxyXG4gXHJcblxyXG4vLyBhcHAuc2V0KCd2aWV3cycsIHBhdGguam9pbihfX2Rpcm5hbWUsICcuL3ZpZXdzJykpO1xyXG4vLyBhcHAuc2V0KCd2aWV3IGVuZ2luZScsJ2VqcycpO1xyXG4vLyBhcHAuZW5naW5lKCdodG1sJywgcmVxdWlyZSgnZWpzJykucmVuZGVyRmlsZSk7XHJcbm1vZHVsZS5leHBvcnRzID0gYXBwO1xyXG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "express",
        "require",
        "app",
        "path",
        "config",
        "cors",
        "routes",
        "corsOptions",
        "exposedHeaders",
        "use",
        "json",
        "urlencoded",
        "extended",
        "PORTA",
        "process",
        "env",
        "PORT",
        "listen",
        "console",
        "log",
        "set",
        "join",
        "__dirname",
        "static",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,GAAG,GAAGF,OAAO,EAAnB;;AACA,MAAMG,IAAI,GAAGF,OAAO,CAAC,MAAD,CAApB;;AAEAA,OAAO,CAAC,QAAD,CAAP,CAAkBG,MAAlB,G,CACA;;;AACA,MAAMC,IAAI,GAAGJ,OAAO,CAAC,MAAD,CAApB;;AACA,MAAMK,MAAM,GAAGL,OAAO,CAAC,gBAAD,CAAtB;;AAEA,IAAIM,WAAW,GAAG;AACdC,EAAAA,cAAc,EAAE;AADF,CAAlB;AAIAN,GAAG,CAACO,GAAJ,CAAQJ,IAAI,CAACE,WAAD,CAAZ;AAEA;AACA;AACA;;AACAL,GAAG,CAACO,GAAJ,CAAQT,OAAO,CAACU,IAAR,EAAR;AACAR,GAAG,CAACO,GAAJ,CAAQT,OAAO,CAACW,UAAR,CAAmB;AACvBC,EAAAA,QAAQ,EAAE;AADa,CAAnB,CAAR;AAIA;AACA;AACA;;AACA,MAAMC,KAAK,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAlC;AACAd,GAAG,CAACe,MAAJ,CAAWJ,KAAX,EAAkB,YAAY;AAC1BK,EAAAA,OAAO,CAACC,GAAR,CAAa,6BAA4BN,KAAM,EAA/C;AACH,CAFD;AAIA;AACA;AACA;;AACCX,GAAG,CAACkB,GAAJ,CAAQ,OAAR,EAAiBjB,IAAI,CAACkB,IAAL,CAAUC,SAAV,EAAoB,OAApB,CAAjB;AACApB,GAAG,CAACkB,GAAJ,CAAQ,aAAR,EAAsB,KAAtB;AACAlB,GAAG,CAACO,GAAJ,CAAQT,OAAO,CAACuB,MAAR,CAAepB,IAAI,CAACkB,IAAL,CAAUC,SAAV,EAAqB,QAArB,CAAf,CAAR;AACApB,GAAG,CAACO,GAAJ,CAAQ,UAAR,EAAoBT,OAAO,CAACuB,MAAR,CAAepB,IAAI,CAACkB,IAAL,CAAUC,SAAV,EAAqB,aAArB,CAAf,CAApB;AAED;AACA;AACA;;AACChB,MAAM,CAACJ,GAAD,CAAN,C,CAKD;AACA;AACA;;AACAsB,MAAM,CAACC,OAAP,GAAiBvB,GAAjB",
      "sourceRoot": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\",
      "sourcesContent": [
        "const express = require(\"express\")\r\nconst app = express()\r\nconst path = require('path')\r\n\r\nrequire('dotenv').config()\r\n//http://expressjs.com/en/resources/middleware/cors.html\r\nconst cors = require('cors');\r\nconst routes = require('./routes/index');\r\n\r\nvar corsOptions = {\r\n    exposedHeaders: 'Authorization'\r\n}\r\n\r\napp.use(cors(corsOptions));\r\n\r\n/**\r\n * Configuração do parser para requisições post\r\n */\r\napp.use(express.json());\r\napp.use(express.urlencoded({\r\n    extended: true\r\n}))\r\n\r\n/**\r\n* Colocar servidor no ar\r\n*/\r\nconst PORTA = process.env.PORT || 8080;\r\napp.listen(PORTA, function () {\r\n    console.log(`Servidor rodando na porta ${PORTA}`)\r\n})\r\n\r\n/**\r\n  * Configurações das páginas\r\n  */\r\n app.set('views', path.join(__dirname,'views'))\r\n app.set('view engine','pug')\r\n app.use(express.static(path.join(__dirname, 'static')));\r\n app.use('/uploads', express.static(path.join(__dirname, '../uploads/')));\r\n\r\n/**\r\n * Rotas\r\n */\r\n routes(app);\r\n\r\n\r\n \r\n\r\n// app.set('views', path.join(__dirname, './views'));\r\n// app.set('view engine','ejs');\r\n// app.engine('html', require('ejs').renderFile);\r\nmodule.exports = app;\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1639088033716
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\rafae\\\\Desktop\\\\web3\\\\projetoweb-negritude-em-debate\\\\api\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\rafae\\\\Desktop\\\\web3\\\\projetoweb-negritude-em-debate\",\"filename\":\"C:\\\\Users\\\\rafae\\\\Desktop\\\\web3\\\\projetoweb-negritude-em-debate\\\\api\\\\routes\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\rafae\\\\Desktop\\\\web3\\\\projetoweb-negritude-em-debate\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\routes\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate",
      "filename": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\routes\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\routes\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\routes\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\routes\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "const albuns = require('./albunsRoute');\n\nconst usuarios = require('./usuariosRoute');\n\nmodule.exports = app => {\n  app.get('/cadastro_foto', (request, response) => {\n    response.render('albuns');\n  });\n  app.use(albuns);\n  app.use(usuarios);\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImFsYnVucyIsInJlcXVpcmUiLCJ1c3VhcmlvcyIsIm1vZHVsZSIsImV4cG9ydHMiLCJhcHAiLCJnZXQiLCJyZXF1ZXN0IiwicmVzcG9uc2UiLCJyZW5kZXIiLCJ1c2UiXSwibWFwcGluZ3MiOiJBQUlBLE1BQU1BLE1BQU0sR0FBR0MsT0FBTyxDQUFDLGVBQUQsQ0FBdEI7O0FBQ0EsTUFBTUMsUUFBUSxHQUFHRCxPQUFPLENBQUMsaUJBQUQsQ0FBeEI7O0FBRUFFLE1BQU0sQ0FBQ0MsT0FBUCxHQUFrQkMsR0FBRCxJQUFTO0FBQ3hCQSxFQUFBQSxHQUFHLENBQUNDLEdBQUosQ0FBUSxnQkFBUixFQUEwQixDQUFDQyxPQUFELEVBQVVDLFFBQVYsS0FBdUI7QUFDL0NBLElBQUFBLFFBQVEsQ0FBQ0MsTUFBVCxDQUFnQixRQUFoQjtBQUNELEdBRkQ7QUFJQUosRUFBQUEsR0FBRyxDQUFDSyxHQUFKLENBQVFWLE1BQVI7QUFDQUssRUFBQUEsR0FBRyxDQUFDSyxHQUFKLENBQVFSLFFBQVI7QUFDRCxDQVBEIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xccmFmYWVcXERlc2t0b3BcXHdlYjNcXHByb2pldG93ZWItbmVncml0dWRlLWVtLWRlYmF0ZVxcYXBpXFxyb3V0ZXNcXCIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5cclxuXHJcblxyXG5jb25zdCBhbGJ1bnMgPSByZXF1aXJlKCcuL2FsYnVuc1JvdXRlJyk7XHJcbmNvbnN0IHVzdWFyaW9zID0gcmVxdWlyZSgnLi91c3Vhcmlvc1JvdXRlJyk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IChhcHApID0+IHtcclxuICBhcHAuZ2V0KCcvY2FkYXN0cm9fZm90bycsIChyZXF1ZXN0LCByZXNwb25zZSkgPT4ge1xyXG4gICAgcmVzcG9uc2UucmVuZGVyKCdhbGJ1bnMnKTtcclxuICB9KTtcclxuXHJcbiAgYXBwLnVzZShhbGJ1bnMpO1xyXG4gIGFwcC51c2UodXN1YXJpb3MpO1xyXG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "albuns",
        "require",
        "usuarios",
        "module",
        "exports",
        "app",
        "get",
        "request",
        "response",
        "render",
        "use"
      ],
      "mappings": "AAIA,MAAMA,MAAM,GAAGC,OAAO,CAAC,eAAD,CAAtB;;AACA,MAAMC,QAAQ,GAAGD,OAAO,CAAC,iBAAD,CAAxB;;AAEAE,MAAM,CAACC,OAAP,GAAkBC,GAAD,IAAS;AACxBA,EAAAA,GAAG,CAACC,GAAJ,CAAQ,gBAAR,EAA0B,CAACC,OAAD,EAAUC,QAAV,KAAuB;AAC/CA,IAAAA,QAAQ,CAACC,MAAT,CAAgB,QAAhB;AACD,GAFD;AAIAJ,EAAAA,GAAG,CAACK,GAAJ,CAAQV,MAAR;AACAK,EAAAA,GAAG,CAACK,GAAJ,CAAQR,QAAR;AACD,CAPD",
      "sourceRoot": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\routes\\",
      "sourcesContent": [
        "\r\n\r\n\r\n\r\nconst albuns = require('./albunsRoute');\r\nconst usuarios = require('./usuariosRoute');\r\n\r\nmodule.exports = (app) => {\r\n  app.get('/cadastro_foto', (request, response) => {\r\n    response.render('albuns');\r\n  });\r\n\r\n  app.use(albuns);\r\n  app.use(usuarios);\r\n};"
      ]
    },
    "sourceType": "module",
    "mtime": 1639085551884
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\rafae\\\\Desktop\\\\web3\\\\projetoweb-negritude-em-debate\\\\api\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\rafae\\\\Desktop\\\\web3\\\\projetoweb-negritude-em-debate\",\"filename\":\"C:\\\\Users\\\\rafae\\\\Desktop\\\\web3\\\\projetoweb-negritude-em-debate\\\\api\\\\routes\\\\albunsRoute.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\rafae\\\\Desktop\\\\web3\\\\projetoweb-negritude-em-debate\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\routes\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate",
      "filename": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\routes\\albunsRoute.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\routes\\albunsRoute.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\routes\\albunsRoute.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\routes\\",
        "sourceFileName": "albunsRoute.js"
      }
    },
    "ast": null,
    "code": "const {\n  Router,\n  response\n} = require('express');\n\nconst AlbumController = require('../controllers/AlbumController');\n\nconst auth = require('../middleware/auth');\n\nconst multer = require('multer');\n\nconst storage = require('../config/multerStoreConfig');\n\nconst upload = multer({\n  storage\n});\nconst router = Router();\nrouter.get('/albuns', (request, response) => {\n  // response.sendFile(path.join(__dirname, '../../pages/html/album_form.html');\n  response.render('albuns');\n});\nrouter.get('/albuns', auth, AlbumController.pegaTodosOsAlbuns);\nrouter.get('/albuns/:id', AlbumController.pegaUmAlbum);\nrouter.post('/albuns', AlbumController.criaAlbum);\nrouter.post('/albuns', upload.single('photo'), AlbumController.criaAlbum);\nrouter.put('/albuns/:id', AlbumController.atualizaAlbum);\nrouter.delete('/albuns/:id', AlbumController.apagarAlbum);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFsYnVuc1JvdXRlLmpzIl0sIm5hbWVzIjpbIlJvdXRlciIsInJlc3BvbnNlIiwicmVxdWlyZSIsIkFsYnVtQ29udHJvbGxlciIsImF1dGgiLCJtdWx0ZXIiLCJzdG9yYWdlIiwidXBsb2FkIiwicm91dGVyIiwiZ2V0IiwicmVxdWVzdCIsInJlbmRlciIsInBlZ2FUb2Rvc09zQWxidW5zIiwicGVnYVVtQWxidW0iLCJwb3N0IiwiY3JpYUFsYnVtIiwic2luZ2xlIiwicHV0IiwiYXR1YWxpemFBbGJ1bSIsImRlbGV0ZSIsImFwYWdhckFsYnVtIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTTtBQUFFQSxFQUFBQSxNQUFGO0FBQVVDLEVBQUFBO0FBQVYsSUFBdUJDLE9BQU8sQ0FBQyxTQUFELENBQXBDOztBQUNBLE1BQU1DLGVBQWUsR0FBR0QsT0FBTyxDQUFDLGdDQUFELENBQS9COztBQUNBLE1BQU1FLElBQUksR0FBR0YsT0FBTyxDQUFDLG9CQUFELENBQXBCOztBQUNBLE1BQU1HLE1BQU0sR0FBR0gsT0FBTyxDQUFDLFFBQUQsQ0FBdEI7O0FBQ0EsTUFBTUksT0FBTyxHQUFHSixPQUFPLENBQUMsNkJBQUQsQ0FBdkI7O0FBQ0EsTUFBTUssTUFBTSxHQUFHRixNQUFNLENBQUM7QUFBRUMsRUFBQUE7QUFBRixDQUFELENBQXJCO0FBRUEsTUFBTUUsTUFBTSxHQUFHUixNQUFNLEVBQXJCO0FBQ0FRLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXLFNBQVgsRUFBc0IsQ0FBQ0MsT0FBRCxFQUFVVCxRQUFWLEtBQXVCO0FBQ3pDO0FBQ0FBLEVBQUFBLFFBQVEsQ0FBQ1UsTUFBVCxDQUFnQixRQUFoQjtBQUNELENBSEg7QUFLQUgsTUFBTSxDQUFDQyxHQUFQLENBQVcsU0FBWCxFQUFzQkwsSUFBdEIsRUFBNEJELGVBQWUsQ0FBQ1MsaUJBQTVDO0FBQ0FKLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXLGFBQVgsRUFBMEJOLGVBQWUsQ0FBQ1UsV0FBMUM7QUFDQUwsTUFBTSxDQUFDTSxJQUFQLENBQVksU0FBWixFQUF1QlgsZUFBZSxDQUFDWSxTQUF2QztBQUNBUCxNQUFNLENBQUNNLElBQVAsQ0FBWSxTQUFaLEVBQXVCUCxNQUFNLENBQUNTLE1BQVAsQ0FBYyxPQUFkLENBQXZCLEVBQStDYixlQUFlLENBQUNZLFNBQS9EO0FBQ0FQLE1BQU0sQ0FBQ1MsR0FBUCxDQUFXLGFBQVgsRUFBMEJkLGVBQWUsQ0FBQ2UsYUFBMUM7QUFDQVYsTUFBTSxDQUFDVyxNQUFQLENBQWMsYUFBZCxFQUE2QmhCLGVBQWUsQ0FBQ2lCLFdBQTdDO0FBRUFDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmQsTUFBakIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxyYWZhZVxcRGVza3RvcFxcd2ViM1xccHJvamV0b3dlYi1uZWdyaXR1ZGUtZW0tZGViYXRlXFxhcGlcXHJvdXRlc1xcIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBSb3V0ZXIsIHJlc3BvbnNlIH0gPSByZXF1aXJlKCdleHByZXNzJyk7XHJcbmNvbnN0IEFsYnVtQ29udHJvbGxlciA9IHJlcXVpcmUoJy4uL2NvbnRyb2xsZXJzL0FsYnVtQ29udHJvbGxlcicpO1xyXG5jb25zdCBhdXRoID0gcmVxdWlyZSgnLi4vbWlkZGxld2FyZS9hdXRoJyk7XHJcbmNvbnN0IG11bHRlciA9IHJlcXVpcmUoJ211bHRlcicpO1xyXG5jb25zdCBzdG9yYWdlID0gcmVxdWlyZSgnLi4vY29uZmlnL211bHRlclN0b3JlQ29uZmlnJyk7XHJcbmNvbnN0IHVwbG9hZCA9IG11bHRlcih7IHN0b3JhZ2UgfSk7XHJcblxyXG5jb25zdCByb3V0ZXIgPSBSb3V0ZXIoKTtcclxucm91dGVyLmdldCgnL2FsYnVucycsIChyZXF1ZXN0LCByZXNwb25zZSkgPT4ge1xyXG4gICAgLy8gcmVzcG9uc2Uuc2VuZEZpbGUocGF0aC5qb2luKF9fZGlybmFtZSwgJy4uLy4uL3BhZ2VzL2h0bWwvYWxidW1fZm9ybS5odG1sJyk7XHJcbiAgICByZXNwb25zZS5yZW5kZXIoJ2FsYnVucycpO1xyXG4gIH0pO1xyXG4gIFxyXG5yb3V0ZXIuZ2V0KCcvYWxidW5zJywgYXV0aCwgQWxidW1Db250cm9sbGVyLnBlZ2FUb2Rvc09zQWxidW5zKTtcclxucm91dGVyLmdldCgnL2FsYnVucy86aWQnLCBBbGJ1bUNvbnRyb2xsZXIucGVnYVVtQWxidW0pO1xyXG5yb3V0ZXIucG9zdCgnL2FsYnVucycsIEFsYnVtQ29udHJvbGxlci5jcmlhQWxidW0pO1xyXG5yb3V0ZXIucG9zdCgnL2FsYnVucycsIHVwbG9hZC5zaW5nbGUoJ3Bob3RvJyksIEFsYnVtQ29udHJvbGxlci5jcmlhQWxidW0pO1xyXG5yb3V0ZXIucHV0KCcvYWxidW5zLzppZCcsIEFsYnVtQ29udHJvbGxlci5hdHVhbGl6YUFsYnVtKTtcclxucm91dGVyLmRlbGV0ZSgnL2FsYnVucy86aWQnLCBBbGJ1bUNvbnRyb2xsZXIuYXBhZ2FyQWxidW0pO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSByb3V0ZXI7Il19",
    "map": {
      "version": 3,
      "sources": [
        "albunsRoute.js"
      ],
      "names": [
        "Router",
        "response",
        "require",
        "AlbumController",
        "auth",
        "multer",
        "storage",
        "upload",
        "router",
        "get",
        "request",
        "render",
        "pegaTodosOsAlbuns",
        "pegaUmAlbum",
        "post",
        "criaAlbum",
        "single",
        "put",
        "atualizaAlbum",
        "delete",
        "apagarAlbum",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAM;AAAEA,EAAAA,MAAF;AAAUC,EAAAA;AAAV,IAAuBC,OAAO,CAAC,SAAD,CAApC;;AACA,MAAMC,eAAe,GAAGD,OAAO,CAAC,gCAAD,CAA/B;;AACA,MAAME,IAAI,GAAGF,OAAO,CAAC,oBAAD,CAApB;;AACA,MAAMG,MAAM,GAAGH,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMI,OAAO,GAAGJ,OAAO,CAAC,6BAAD,CAAvB;;AACA,MAAMK,MAAM,GAAGF,MAAM,CAAC;AAAEC,EAAAA;AAAF,CAAD,CAArB;AAEA,MAAME,MAAM,GAAGR,MAAM,EAArB;AACAQ,MAAM,CAACC,GAAP,CAAW,SAAX,EAAsB,CAACC,OAAD,EAAUT,QAAV,KAAuB;AACzC;AACAA,EAAAA,QAAQ,CAACU,MAAT,CAAgB,QAAhB;AACD,CAHH;AAKAH,MAAM,CAACC,GAAP,CAAW,SAAX,EAAsBL,IAAtB,EAA4BD,eAAe,CAACS,iBAA5C;AACAJ,MAAM,CAACC,GAAP,CAAW,aAAX,EAA0BN,eAAe,CAACU,WAA1C;AACAL,MAAM,CAACM,IAAP,CAAY,SAAZ,EAAuBX,eAAe,CAACY,SAAvC;AACAP,MAAM,CAACM,IAAP,CAAY,SAAZ,EAAuBP,MAAM,CAACS,MAAP,CAAc,OAAd,CAAvB,EAA+Cb,eAAe,CAACY,SAA/D;AACAP,MAAM,CAACS,GAAP,CAAW,aAAX,EAA0Bd,eAAe,CAACe,aAA1C;AACAV,MAAM,CAACW,MAAP,CAAc,aAAd,EAA6BhB,eAAe,CAACiB,WAA7C;AAEAC,MAAM,CAACC,OAAP,GAAiBd,MAAjB",
      "sourceRoot": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\routes\\",
      "sourcesContent": [
        "const { Router, response } = require('express');\r\nconst AlbumController = require('../controllers/AlbumController');\r\nconst auth = require('../middleware/auth');\r\nconst multer = require('multer');\r\nconst storage = require('../config/multerStoreConfig');\r\nconst upload = multer({ storage });\r\n\r\nconst router = Router();\r\nrouter.get('/albuns', (request, response) => {\r\n    // response.sendFile(path.join(__dirname, '../../pages/html/album_form.html');\r\n    response.render('albuns');\r\n  });\r\n  \r\nrouter.get('/albuns', auth, AlbumController.pegaTodosOsAlbuns);\r\nrouter.get('/albuns/:id', AlbumController.pegaUmAlbum);\r\nrouter.post('/albuns', AlbumController.criaAlbum);\r\nrouter.post('/albuns', upload.single('photo'), AlbumController.criaAlbum);\r\nrouter.put('/albuns/:id', AlbumController.atualizaAlbum);\r\nrouter.delete('/albuns/:id', AlbumController.apagarAlbum);\r\n\r\nmodule.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1639088303049
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\rafae\\\\Desktop\\\\web3\\\\projetoweb-negritude-em-debate\\\\api\\\\controllers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\rafae\\\\Desktop\\\\web3\\\\projetoweb-negritude-em-debate\",\"filename\":\"C:\\\\Users\\\\rafae\\\\Desktop\\\\web3\\\\projetoweb-negritude-em-debate\\\\api\\\\controllers\\\\AlbumController.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\rafae\\\\Desktop\\\\web3\\\\projetoweb-negritude-em-debate\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\controllers\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate",
      "filename": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\controllers\\AlbumController.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\controllers\\AlbumController.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\controllers\\AlbumController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\controllers\\",
        "sourceFileName": "AlbumController.js"
      }
    },
    "ast": null,
    "code": "//Automaticamente ele encontra o arquivo index.js dentro da pasta\nconst {\n  render\n} = require('..');\n\nconst database = require('../models');\n/**\r\n * CRUD\r\n */\n\n\nclass AlbumController {\n  //async: espera resolver tudo dentro do método antes do envio da resposta\n  static async pegaTodosOsAlbuns(req, res) {\n    try {\n      //await: aguarda até receber a resposta do BD\n      const todosOsAlbuns = await database.Albuns.findAll();\n      return res.status(200).json(todosOsAlbuns); //res.render('AlbunsView', { todosOsAlbuns });\n    } catch (error) {\n      return res.status(500).json(error.message);\n    }\n  }\n\n  static async pegaUmAlbum(req, res) {\n    const {\n      id\n    } = req.params;\n\n    try {\n      const umAlbum = await database.Albuns.findOne({\n        where: {\n          id: Number(id)\n        }\n      });\n      return res.status(200).json(umAlbum);\n    } catch (error) {\n      return res.status(500).json(error.message);\n    }\n  }\n\n  static async criaAlbum(req, res) {\n    const novoAlbum = req.body;\n    console.log(req.body);\n\n    try {\n      const novoAlbumCriado = await database.Albuns.create(novoAlbum);\n      return res.render('albuns');\n    } catch (error) {\n      return res.status(500).json(error.message);\n    }\n  }\n\n  static async atualizaAlbum(req, res) {\n    const novasInfosAlbum = req.body;\n    const {\n      id\n    } = req.params;\n\n    try {\n      await database.Albuns.update(novasInfosAlbum, {\n        where: {\n          id: Number(id)\n        }\n      });\n      const AlbumAtualizado = await database.Albuns.findOne({\n        where: {\n          id: Number(id)\n        }\n      });\n      return res.status(200).json(AlbumAtualizado);\n    } catch (error) {\n      return res.status(500).json(error.message);\n    }\n  }\n\n  static async apagarAlbum(req, res) {\n    const {\n      id\n    } = req.params;\n\n    try {\n      await database.Albuns.destroy({\n        where: {\n          id: Number(id)\n        }\n      });\n      return res.status(200).json({\n        mensagem: `id ${id} deletado`\n      });\n    } catch (error) {\n      return res.status(500).json(error.message);\n    }\n  }\n\n}\n\nmodule.exports = AlbumController;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkFsYnVtQ29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJyZW5kZXIiLCJyZXF1aXJlIiwiZGF0YWJhc2UiLCJBbGJ1bUNvbnRyb2xsZXIiLCJwZWdhVG9kb3NPc0FsYnVucyIsInJlcSIsInJlcyIsInRvZG9zT3NBbGJ1bnMiLCJBbGJ1bnMiLCJmaW5kQWxsIiwic3RhdHVzIiwianNvbiIsImVycm9yIiwibWVzc2FnZSIsInBlZ2FVbUFsYnVtIiwiaWQiLCJwYXJhbXMiLCJ1bUFsYnVtIiwiZmluZE9uZSIsIndoZXJlIiwiTnVtYmVyIiwiY3JpYUFsYnVtIiwibm92b0FsYnVtIiwiYm9keSIsImNvbnNvbGUiLCJsb2ciLCJub3ZvQWxidW1DcmlhZG8iLCJjcmVhdGUiLCJhdHVhbGl6YUFsYnVtIiwibm92YXNJbmZvc0FsYnVtIiwidXBkYXRlIiwiQWxidW1BdHVhbGl6YWRvIiwiYXBhZ2FyQWxidW0iLCJkZXN0cm95IiwibWVuc2FnZW0iLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTtBQUNBLE1BQU07QUFBRUEsRUFBQUE7QUFBRixJQUFhQyxPQUFPLENBQUMsSUFBRCxDQUExQjs7QUFDQSxNQUFNQyxRQUFRLEdBQUdELE9BQU8sQ0FBQyxXQUFELENBQXhCO0FBRUE7QUFDQTtBQUNBOzs7QUFDQyxNQUFNRSxlQUFOLENBQXNCO0FBQ25CO0FBQzhCLGVBQWpCQyxpQkFBaUIsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQVc7QUFDckMsUUFBSTtBQUNBO0FBQ0EsWUFBTUMsYUFBYSxHQUFHLE1BQU1MLFFBQVEsQ0FBQ00sTUFBVCxDQUFnQkMsT0FBaEIsRUFBNUI7QUFDQSxhQUFPSCxHQUFHLENBQUNJLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQkosYUFBckIsQ0FBUCxDQUhBLENBSUE7QUFDSCxLQUxELENBS0UsT0FBT0ssS0FBUCxFQUFjO0FBQ1osYUFBT04sR0FBRyxDQUFDSSxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFB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QUFBRXVCLFFBQUFBLFFBQVEsRUFBRyxNQUFLbkIsRUFBRztBQUFyQixPQUF0QixDQUFQO0FBQ0gsS0FIRCxDQUdFLE9BQU9ILEtBQVAsRUFBYztBQUNaLGFBQU9OLEdBQUcsQ0FBQ0ksTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCQyxLQUFLLENBQUNDLE9BQTNCLENBQVA7QUFDSDtBQUNKOztBQTNEa0I7O0FBK0R2QnNCLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQmpDLGVBQWpCIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xccmFmYWVcXERlc2t0b3BcXHdlYjNcXHByb2pldG93ZWItbmVncml0dWRlLWVtLWRlYmF0ZVxcYXBpXFxjb250cm9sbGVyc1xcIiwic291cmNlc0NvbnRlbnQiOlsiLy9BdXRvbWF0aWNhbWVudGUgZWxlIGVuY29udHJhIG8gYXJxdWl2byBpbmRleC5qcyBkZW50cm8gZGEgcGFzdGFcclxuY29uc3QgeyByZW5kZXIgfSA9IHJlcXVpcmUoJy4uJyk7XHJcbmNvbnN0IGRhdGFiYXNlID0gcmVxdWlyZSgnLi4vbW9kZWxzJyk7XHJcblxyXG4vKipcclxuICogQ1JVRFxyXG4gKi9cclxuIGNsYXNzIEFsYnVtQ29udHJvbGxlciB7XHJcbiAgICAvL2FzeW5jOiBlc3BlcmEgcmVzb2x2ZXIgdHVkbyBkZW50cm8gZG8gbcOpdG9kbyBhbnRlcyBkbyBlbnZpbyBkYSByZXNwb3N0YVxyXG4gICAgc3RhdGljIGFzeW5jIHBlZ2FUb2Rvc09zQWxidW5zKHJlcSwgcmVzKSB7XHJcbiAgICAgICAgdHJ5IHtcclxuICAgICAgICAgICAgLy9hd2FpdDogYWd1YXJkYSBhdMOpIHJlY2ViZXIgYSByZXNwb3N0YSBkbyBCRFxyXG4gICAgICAgICAgICBjb25zdCB0b2Rvc09zQWxidW5zID0gYXdhaXQgZGF0YWJhc2UuQWxidW5zLmZpbmRBbGwoKTtcclxuICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHRvZG9zT3NBbGJ1bnMpO1xyXG4gICAgICAgICAgICAvL3Jlcy5yZW5kZXIoJ0FsYnVuc1ZpZXcnLCB7IHRvZG9zT3NBbGJ1bnMgfSk7XHJcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKGVycm9yLm1lc3NhZ2UpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgcGVnYVVtQWxidW0ocmVxLCByZXMpIHtcclxuICAgICAgICBjb25zdCB7IGlkIH0gPSByZXEucGFyYW1zO1xyXG4gICAgICAgIHRyeXtcclxuICAgICAgICAgICAgY29uc3QgdW1BbGJ1bSA9IGF3YWl0IGRhdGFiYXNlLkFsYnVucy5maW5kT25lKCB7IFxyXG4gICAgICAgICAgICAgICAgd2hlcmU6IHsgXHJcbiAgICAgICAgICAgICAgICAgICAgaWQ6IE51bWJlcihpZCkgXHJcbiAgICAgICAgICAgICAgICB9IFxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKHVtQWxidW0pO1xyXG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDUwMCkuanNvbihlcnJvci5tZXNzYWdlKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIGFzeW5jIGNyaWFBbGJ1bShyZXEsIHJlcykge1xyXG4gICAgICAgIGNvbnN0IG5vdm9BbGJ1bSA9IHJlcS5ib2R5O1xyXG4gICAgICAgIFxyXG4gICAgICAgIGNvbnNvbGUubG9nKHJlcS5ib2R5KTtcclxuICAgICAgICB0cnl7XHJcbiAgICAgICAgICAgIGNvbnN0IG5vdm9BbGJ1bUNyaWFkbyA9IGF3YWl0IGRhdGFiYXNlLkFsYnVucy5jcmVhdGUobm92b0FsYnVtKTtcclxuICAgICAgICAgICAgcmV0dXJuIHJlcy5yZW5kZXIoJ2FsYnVucycpO1xyXG4gICAgICAgIH0gY2F0Y2ggKGVycm9yKSB7XHJcbiAgICAgICAgICAgIHJldHVybiByZXMuc3RhdHVzKDUwMCkuanNvbihlcnJvci5tZXNzYWdlKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIGFzeW5jIGF0dWFsaXphQWxidW0ocmVxLCByZXMpIHtcclxuICAgICAgICBjb25zdCBub3Zhc0luZm9zQWxidW0gPSByZXEuYm9keTtcclxuICAgICAgICBjb25zdCB7IGlkIH0gPSByZXEucGFyYW1zO1xyXG4gICAgICAgIHRyeXtcclxuICAgICAgICAgICAgYXdhaXQgZGF0YWJhc2UuQWxidW5zLnVwZGF0ZShub3Zhc0luZm9zQWxidW0sIHsgd2hlcmU6IHsgaWQ6IE51bWJlcihpZCkgfSB9KTtcclxuICAgICAgICAgICAgY29uc3QgQWxidW1BdHVhbGl6YWRvID0gYXdhaXQgZGF0YWJhc2UuQWxidW5zLmZpbmRPbmUoIHsgd2hlcmU6IHsgaWQ6IE51bWJlcihpZCkgfSB9KTtcclxuICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoMjAwKS5qc29uKEFsYnVtQXR1YWxpemFkbyk7XHJcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKGVycm9yLm1lc3NhZ2UpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgYXN5bmMgYXBhZ2FyQWxidW0ocmVxLCByZXMpIHtcclxuICAgICAgICBjb25zdCB7IGlkIH0gPSByZXEucGFyYW1zO1xyXG4gICAgICAgIHRyeXtcclxuICAgICAgICAgICAgYXdhaXQgZGF0YWJhc2UuQWxidW5zLmRlc3Ryb3koeyB3aGVyZTogeyBpZDogTnVtYmVyKGlkKSB9IH0pO1xyXG4gICAgICAgICAgICByZXR1cm4gcmVzLnN0YXR1cygyMDApLmpzb24oIHsgbWVuc2FnZW06IGBpZCAke2lkfSBkZWxldGFkb2B9ICk7XHJcbiAgICAgICAgfSBjYXRjaCAoZXJyb3IpIHtcclxuICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNTAwKS5qc29uKGVycm9yLm1lc3NhZ2UpO1xyXG4gICAgICAgIH1cclxuICAgIH0gIFxyXG5cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBBbGJ1bUNvbnRyb2xsZXIiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "AlbumController.js"
      ],
      "names": [
        "render",
        "require",
        "database",
        "AlbumController",
        "pegaTodosOsAlbuns",
        "req",
        "res",
        "todosOsAlbuns",
        "Albuns",
        "findAll",
        "status",
        "json",
        "error",
        "message",
        "pegaUmAlbum",
        "id",
        "params",
        "umAlbum",
        "findOne",
        "where",
        "Number",
        "criaAlbum",
        "novoAlbum",
        "body",
        "console",
        "log",
        "novoAlbumCriado",
        "create",
        "atualizaAlbum",
        "novasInfosAlbum",
        "update",
        "AlbumAtualizado",
        "apagarAlbum",
        "destroy",
        "mensagem",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\controllers\\",
      "sourcesContent": [
        "//Automaticamente ele encontra o arquivo index.js dentro da pasta\r\nconst { render } = require('..');\r\nconst database = require('../models');\r\n\r\n/**\r\n * CRUD\r\n */\r\n class AlbumController {\r\n    //async: espera resolver tudo dentro do método antes do envio da resposta\r\n    static async pegaTodosOsAlbuns(req, res) {\r\n        try {\r\n            //await: aguarda até receber a resposta do BD\r\n            const todosOsAlbuns = await database.Albuns.findAll();\r\n            return res.status(200).json(todosOsAlbuns);\r\n            //res.render('AlbunsView', { todosOsAlbuns });\r\n        } catch (error) {\r\n            return res.status(500).json(error.message);\r\n        }\r\n    }\r\n\r\n    static async pegaUmAlbum(req, res) {\r\n        const { id } = req.params;\r\n        try{\r\n            const umAlbum = await database.Albuns.findOne( { \r\n                where: { \r\n                    id: Number(id) \r\n                } \r\n            });\r\n            return res.status(200).json(umAlbum);\r\n        } catch (error) {\r\n            return res.status(500).json(error.message);\r\n        }\r\n    }\r\n\r\n    static async criaAlbum(req, res) {\r\n        const novoAlbum = req.body;\r\n        \r\n        console.log(req.body);\r\n        try{\r\n            const novoAlbumCriado = await database.Albuns.create(novoAlbum);\r\n            return res.render('albuns');\r\n        } catch (error) {\r\n            return res.status(500).json(error.message);\r\n        }\r\n    }\r\n\r\n    static async atualizaAlbum(req, res) {\r\n        const novasInfosAlbum = req.body;\r\n        const { id } = req.params;\r\n        try{\r\n            await database.Albuns.update(novasInfosAlbum, { where: { id: Number(id) } });\r\n            const AlbumAtualizado = await database.Albuns.findOne( { where: { id: Number(id) } });\r\n            return res.status(200).json(AlbumAtualizado);\r\n        } catch (error) {\r\n            return res.status(500).json(error.message);\r\n        }\r\n    }\r\n\r\n    static async apagarAlbum(req, res) {\r\n        const { id } = req.params;\r\n        try{\r\n            await database.Albuns.destroy({ where: { id: Number(id) } });\r\n            return res.status(200).json( { mensagem: `id ${id} deletado`} );\r\n        } catch (error) {\r\n            return res.status(500).json(error.message);\r\n        }\r\n    }  \r\n\r\n}\r\n\r\nmodule.exports = AlbumController"
      ]
    },
    "sourceType": "module",
    "mtime": 1639087583767
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\rafae\\\\Desktop\\\\web3\\\\projetoweb-negritude-em-debate\\\\api\\\\models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\rafae\\\\Desktop\\\\web3\\\\projetoweb-negritude-em-debate\",\"filename\":\"C:\\\\Users\\\\rafae\\\\Desktop\\\\web3\\\\projetoweb-negritude-em-debate\\\\api\\\\models\\\\index.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\rafae\\\\Desktop\\\\web3\\\\projetoweb-negritude-em-debate\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\models\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate",
      "filename": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\models\\index.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\models\\index.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\models\\index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\models\\",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nconst fs = require('fs');\n\nconst path = require('path');\n\nconst Sequelize = require('sequelize');\n\nconst basename = path.basename(__filename);\nconst env = process.env.NODE_ENV || 'development';\n\nconst config = require(__dirname + '/../config/config.json')[env];\n\nconst db = {};\nlet sequelize;\n\nif (config.use_env_variable) {\n  sequelize = new Sequelize(process.env[config.use_env_variable], config);\n} else {\n  sequelize = new Sequelize(config.database, config.username, config.password, config);\n}\n\nfs.readdirSync(__dirname).filter(file => {\n  return file.indexOf('.') !== 0 && file !== basename && file.slice(-3) === '.js';\n}).forEach(file => {\n  const model = require(path.join(__dirname, file))(sequelize, Sequelize.DataTypes);\n\n  db[model.name] = model;\n});\nObject.keys(db).forEach(modelName => {\n  if (db[modelName].associate) {\n    db[modelName].associate(db);\n  }\n});\ndb.sequelize = sequelize;\ndb.Sequelize = Sequelize;\nmodule.exports = db;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbImZzIiwicmVxdWlyZSIsInBhdGgiLCJTZXF1ZWxpemUiLCJiYXNlbmFtZSIsIl9fZmlsZW5hbWUiLCJlbnYiLCJwcm9jZXNzIiwiTk9ERV9FTlYiLCJjb25maWciLCJfX2Rpcm5hbWUiLCJkYiIsInNlcXVlbGl6ZSIsInVzZV9lbnZfdmFyaWFibGUiLCJkYXRhYmFzZSIsInVzZXJuYW1lIiwicGFzc3dvcmQiLCJyZWFkZGlyU3luYyIsImZpbHRlciIsImZpbGUiLCJpbmRleE9mIiwic2xpY2UiLCJmb3JFYWNoIiwibW9kZWwiLCJqb2luIiwiRGF0YVR5cGVzIiwibmFtZSIsIk9iamVjdCIsImtleXMiLCJtb2RlbE5hbWUiLCJhc3NvY2lhdGUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQSxNQUFNQSxFQUFFLEdBQUdDLE9BQU8sQ0FBQyxJQUFELENBQWxCOztBQUNBLE1BQU1DLElBQUksR0FBR0QsT0FBTyxDQUFDLE1BQUQsQ0FBcEI7O0FBQ0EsTUFBTUUsU0FBUyxHQUFHRixPQUFPLENBQUMsV0FBRCxDQUF6Qjs7QUFDQSxNQUFNRyxRQUFRLEdBQUdGLElBQUksQ0FBQ0UsUUFBTCxDQUFjQyxVQUFkLENBQWpCO0FBQ0EsTUFBTUMsR0FBRyxHQUFHQyxPQUFPLENBQUNELEdBQVIsQ0FBWUUsUUFBWixJQUF3QixhQUFwQzs7QUFDQSxNQUFNQyxNQUFNLEdBQUdSLE9BQU8sQ0FBQ1MsU0FBUyxHQUFHLHdCQUFiLENBQVAsQ0FBOENKLEdBQTlDLENBQWY7O0FBQ0EsTUFBTUssRUFBRSxHQUFHLEVBQVg7QUFFQSxJQUFJQyxTQUFKOztBQUNBLElBQUlILE1BQU0sQ0FBQ0ksZ0JBQVgsRUFBNkI7QUFDM0JELEVBQUFBLFNBQVMsR0FBRyxJQUFJVCxTQUFKLENBQWNJLE9BQU8sQ0FBQ0QsR0FBUixDQUFZRyxNQUFNLENBQUNJLGdCQUFuQixDQUFkLEVBQW9ESixNQUFwRCxDQUFaO0FBQ0QsQ0FGRCxNQUVPO0FBQ0xHLEVBQUFBLFNBQVMsR0FBRyxJQUFJVCxTQUFKLENBQWNNLE1BQU0sQ0FBQ0ssUUFBckIsRUFBK0JMLE1BQU0sQ0FBQ00sUUFBdEMsRUFBZ0ROLE1BQU0sQ0FBQ08sUUFBdkQsRUFBaUVQLE1BQWpFLENBQVo7QUFDRDs7QUFFRFQsRUFBRSxDQUNDaUIsV0FESCxDQUNlUCxTQURmLEVBRUdRLE1BRkgsQ0FFVUMsSUFBSSxJQUFJO0FBQ2QsU0FBUUEsSUFBSSxDQUFDQyxPQUFMLENBQWEsR0FBYixNQUFzQixDQUF2QixJQUE4QkQsSUFBSSxLQUFLZixRQUF2QyxJQUFxRGUsSUFBSSxDQUFDRSxLQUFMLENBQVcsQ0FBQyxDQUFaLE1BQW1CLEtBQS9FO0FBQ0QsQ0FKSCxFQUtHQyxPQUxILENBS1dILElBQUksSUFBSTtBQUNmLFFBQU1JLEtBQUssR0FBR3RCLE9BQU8sQ0FBQ0MsSUFBSSxDQUFDc0IsSUFBTCxDQUFVZCxTQUFWLEVBQXFCUyxJQUFyQixDQUFELENBQVAsQ0FBb0NQLFNBQXBDLEVBQStDVCxTQUFTLENBQUNzQixTQUF6RCxDQUFkOztBQUNBZCxFQUFBQSxFQUFFLENBQUNZLEtBQUssQ0FBQ0csSUFBUCxDQUFGLEdBQWlCSCxLQUFqQjtBQUNELENBUkg7QUFVQUksTUFBTSxDQUFDQyxJQUFQLENBQVlqQixFQUFaLEVBQWdCVyxPQUFoQixDQUF3Qk8sU0FBUyxJQUFJO0FBQ25DLE1BQUlsQixFQUFFLENBQUNrQixTQUFELENBQUYsQ0FBY0MsU0FBbEIsRUFBNkI7QUFDM0JuQixJQUFBQSxFQUFFLENBQUNrQixTQUFELENBQUYsQ0FBY0MsU0FBZCxDQUF3Qm5CLEVBQXhCO0FBQ0Q7QUFDRixDQUpEO0FBTUFBLEVBQUUsQ0FBQ0MsU0FBSCxHQUFlQSxTQUFmO0FBQ0FELEVBQUUsQ0FBQ1IsU0FBSCxHQUFlQSxTQUFmO0FBRUE0QixNQUFNLENBQUNDLE9BQVAsR0FBaUJyQixFQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXHJhZmFlXFxEZXNrdG9wXFx3ZWIzXFxwcm9qZXRvd2ViLW5lZ3JpdHVkZS1lbS1kZWJhdGVcXGFwaVxcbW9kZWxzXFwiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcblxyXG5jb25zdCBmcyA9IHJlcXVpcmUoJ2ZzJyk7XHJcbmNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XHJcbmNvbnN0IFNlcXVlbGl6ZSA9IHJlcXVpcmUoJ3NlcXVlbGl6ZScpO1xyXG5jb25zdCBiYXNlbmFtZSA9IHBhdGguYmFzZW5hbWUoX19maWxlbmFtZSk7XHJcbmNvbnN0IGVudiA9IHByb2Nlc3MuZW52Lk5PREVfRU5WIHx8ICdkZXZlbG9wbWVudCc7XHJcbmNvbnN0IGNvbmZpZyA9IHJlcXVpcmUoX19kaXJuYW1lICsgJy8uLi9jb25maWcvY29uZmlnLmpzb24nKVtlbnZdO1xyXG5jb25zdCBkYiA9IHt9O1xyXG5cclxubGV0IHNlcXVlbGl6ZTtcclxuaWYgKGNvbmZpZy51c2VfZW52X3ZhcmlhYmxlKSB7XHJcbiAgc2VxdWVsaXplID0gbmV3IFNlcXVlbGl6ZShwcm9jZXNzLmVudltjb25maWcudXNlX2Vudl92YXJpYWJsZV0sIGNvbmZpZyk7XHJcbn0gZWxzZSB7XHJcbiAgc2VxdWVsaXplID0gbmV3IFNlcXVlbGl6ZShjb25maWcuZGF0YWJhc2UsIGNvbmZpZy51c2VybmFtZSwgY29uZmlnLnBhc3N3b3JkLCBjb25maWcpO1xyXG59XHJcblxyXG5mc1xyXG4gIC5yZWFkZGlyU3luYyhfX2Rpcm5hbWUpXHJcbiAgLmZpbHRlcihmaWxlID0+IHtcclxuICAgIHJldHVybiAoZmlsZS5pbmRleE9mKCcuJykgIT09IDApICYmIChmaWxlICE9PSBiYXNlbmFtZSkgJiYgKGZpbGUuc2xpY2UoLTMpID09PSAnLmpzJyk7XHJcbiAgfSlcclxuICAuZm9yRWFjaChmaWxlID0+IHtcclxuICAgIGNvbnN0IG1vZGVsID0gcmVxdWlyZShwYXRoLmpvaW4oX19kaXJuYW1lLCBmaWxlKSkoc2VxdWVsaXplLCBTZXF1ZWxpemUuRGF0YVR5cGVzKTtcclxuICAgIGRiW21vZGVsLm5hbWVdID0gbW9kZWw7XHJcbiAgfSk7XHJcblxyXG5PYmplY3Qua2V5cyhkYikuZm9yRWFjaChtb2RlbE5hbWUgPT4ge1xyXG4gIGlmIChkYlttb2RlbE5hbWVdLmFzc29jaWF0ZSkge1xyXG4gICAgZGJbbW9kZWxOYW1lXS5hc3NvY2lhdGUoZGIpO1xyXG4gIH1cclxufSk7XHJcblxyXG5kYi5zZXF1ZWxpemUgPSBzZXF1ZWxpemU7XHJcbmRiLlNlcXVlbGl6ZSA9IFNlcXVlbGl6ZTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gZGI7XHJcbiJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "fs",
        "require",
        "path",
        "Sequelize",
        "basename",
        "__filename",
        "env",
        "process",
        "NODE_ENV",
        "config",
        "__dirname",
        "db",
        "sequelize",
        "use_env_variable",
        "database",
        "username",
        "password",
        "readdirSync",
        "filter",
        "file",
        "indexOf",
        "slice",
        "forEach",
        "model",
        "join",
        "DataTypes",
        "name",
        "Object",
        "keys",
        "modelName",
        "associate",
        "module",
        "exports"
      ],
      "mappings": "AAAA;;AAEA,MAAMA,EAAE,GAAGC,OAAO,CAAC,IAAD,CAAlB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,MAAD,CAApB;;AACA,MAAME,SAAS,GAAGF,OAAO,CAAC,WAAD,CAAzB;;AACA,MAAMG,QAAQ,GAAGF,IAAI,CAACE,QAAL,CAAcC,UAAd,CAAjB;AACA,MAAMC,GAAG,GAAGC,OAAO,CAACD,GAAR,CAAYE,QAAZ,IAAwB,aAApC;;AACA,MAAMC,MAAM,GAAGR,OAAO,CAACS,SAAS,GAAG,wBAAb,CAAP,CAA8CJ,GAA9C,CAAf;;AACA,MAAMK,EAAE,GAAG,EAAX;AAEA,IAAIC,SAAJ;;AACA,IAAIH,MAAM,CAACI,gBAAX,EAA6B;AAC3BD,EAAAA,SAAS,GAAG,IAAIT,SAAJ,CAAcI,OAAO,CAACD,GAAR,CAAYG,MAAM,CAACI,gBAAnB,CAAd,EAAoDJ,MAApD,CAAZ;AACD,CAFD,MAEO;AACLG,EAAAA,SAAS,GAAG,IAAIT,SAAJ,CAAcM,MAAM,CAACK,QAArB,EAA+BL,MAAM,CAACM,QAAtC,EAAgDN,MAAM,CAACO,QAAvD,EAAiEP,MAAjE,CAAZ;AACD;;AAEDT,EAAE,CACCiB,WADH,CACeP,SADf,EAEGQ,MAFH,CAEUC,IAAI,IAAI;AACd,SAAQA,IAAI,CAACC,OAAL,CAAa,GAAb,MAAsB,CAAvB,IAA8BD,IAAI,KAAKf,QAAvC,IAAqDe,IAAI,CAACE,KAAL,CAAW,CAAC,CAAZ,MAAmB,KAA/E;AACD,CAJH,EAKGC,OALH,CAKWH,IAAI,IAAI;AACf,QAAMI,KAAK,GAAGtB,OAAO,CAACC,IAAI,CAACsB,IAAL,CAAUd,SAAV,EAAqBS,IAArB,CAAD,CAAP,CAAoCP,SAApC,EAA+CT,SAAS,CAACsB,SAAzD,CAAd;;AACAd,EAAAA,EAAE,CAACY,KAAK,CAACG,IAAP,CAAF,GAAiBH,KAAjB;AACD,CARH;AAUAI,MAAM,CAACC,IAAP,CAAYjB,EAAZ,EAAgBW,OAAhB,CAAwBO,SAAS,IAAI;AACnC,MAAIlB,EAAE,CAACkB,SAAD,CAAF,CAAcC,SAAlB,EAA6B;AAC3BnB,IAAAA,EAAE,CAACkB,SAAD,CAAF,CAAcC,SAAd,CAAwBnB,EAAxB;AACD;AACF,CAJD;AAMAA,EAAE,CAACC,SAAH,GAAeA,SAAf;AACAD,EAAE,CAACR,SAAH,GAAeA,SAAf;AAEA4B,MAAM,CAACC,OAAP,GAAiBrB,EAAjB",
      "sourceRoot": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\models\\",
      "sourcesContent": [
        "'use strict';\r\n\r\nconst fs = require('fs');\r\nconst path = require('path');\r\nconst Sequelize = require('sequelize');\r\nconst basename = path.basename(__filename);\r\nconst env = process.env.NODE_ENV || 'development';\r\nconst config = require(__dirname + '/../config/config.json')[env];\r\nconst db = {};\r\n\r\nlet sequelize;\r\nif (config.use_env_variable) {\r\n  sequelize = new Sequelize(process.env[config.use_env_variable], config);\r\n} else {\r\n  sequelize = new Sequelize(config.database, config.username, config.password, config);\r\n}\r\n\r\nfs\r\n  .readdirSync(__dirname)\r\n  .filter(file => {\r\n    return (file.indexOf('.') !== 0) && (file !== basename) && (file.slice(-3) === '.js');\r\n  })\r\n  .forEach(file => {\r\n    const model = require(path.join(__dirname, file))(sequelize, Sequelize.DataTypes);\r\n    db[model.name] = model;\r\n  });\r\n\r\nObject.keys(db).forEach(modelName => {\r\n  if (db[modelName].associate) {\r\n    db[modelName].associate(db);\r\n  }\r\n});\r\n\r\ndb.sequelize = sequelize;\r\ndb.Sequelize = Sequelize;\r\n\r\nmodule.exports = db;\r\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1639055197617
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\rafae\\\\Desktop\\\\web3\\\\projetoweb-negritude-em-debate\\\\api\\\\models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\rafae\\\\Desktop\\\\web3\\\\projetoweb-negritude-em-debate\",\"filename\":\"C:\\\\Users\\\\rafae\\\\Desktop\\\\web3\\\\projetoweb-negritude-em-debate\\\\api\\\\models\\\\albuns.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\rafae\\\\Desktop\\\\web3\\\\projetoweb-negritude-em-debate\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\models\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate",
      "filename": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\models\\albuns.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\models\\albuns.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\models\\albuns.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\models\\",
        "sourceFileName": "albuns.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nconst {\n  Model\n} = require('sequelize');\n\nmodule.exports = (sequelize, DataTypes) => {\n  class Albuns extends Model {\n    /**\r\n     * Helper method for defining associations.\r\n     * This method is not a part of Sequelize lifecycle.\r\n     * The `models/index` file will call this method automatically.\r\n     */\n    static associate(models) {// define association here\n    }\n\n  }\n\n  ;\n  Albuns.init({\n    nome: DataTypes.STRING,\n    cpf: DataTypes.STRING,\n    tel_whats: DataTypes.STRING,\n    email: DataTypes.STRING,\n    estado: DataTypes.STRING,\n    cidade: DataTypes.STRING,\n    data_nascimento: DataTypes.DATE,\n    titulo_foto: DataTypes.STRING,\n    nome_fotografo: DataTypes.STRING,\n    nome_foto: DataTypes.STRING,\n    nome_responsavel: DataTypes.STRING,\n    cpf_responsavel: DataTypes.STRING\n  }, {\n    sequelize,\n    modelName: 'Albuns'\n  });\n  return Albuns;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFsYnVucy5qcyJdLCJuYW1lcyI6WyJNb2RlbCIsInJlcXVpcmUiLCJtb2R1bGUiLCJleHBvcnRzIiwic2VxdWVsaXplIiwiRGF0YVR5cGVzIiwiQWxidW5zIiwiYXNzb2NpYXRlIiwibW9kZWxzIiwiaW5pdCIsIm5vbWUiLCJTVFJJTkciLCJjcGYiLCJ0ZWxfd2hhdHMiLCJlbWFpbCIsImVzdGFkbyIsImNpZGFkZSIsImRhdGFfbmFzY2ltZW50byIsIkRBVEUiLCJ0aXR1bG9fZm90byIsIm5vbWVfZm90b2dyYWZvIiwibm9tZV9mb3RvIiwibm9tZV9yZXNwb25zYXZlbCIsImNwZl9yZXNwb25zYXZlbCIsIm1vZGVsTmFtZSJdLCJtYXBwaW5ncyI6IkFBQUE7O0FBQ0EsTUFBTTtBQUNKQSxFQUFBQTtBQURJLElBRUZDLE9BQU8sQ0FBQyxXQUFELENBRlg7O0FBR0FDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQixDQUFDQyxTQUFELEVBQVlDLFNBQVosS0FBMEI7QUFDekMsUUFBTUMsTUFBTixTQUFxQk4sS0FBckIsQ0FBMkI7QUFDekI7QUFDSjtBQUNBO0FBQ0E7QUFDQTtBQUNvQixXQUFUTyxTQUFTLENBQUNDLE1BQUQsRUFBUyxDQUN2QjtBQUNEOztBQVJ3Qjs7QUFTMUI7QUFDREYsRUFBQUEsTUFBTSxDQUFDRyxJQUFQLENBQVk7QUFDVkMsSUFBQUEsSUFBSSxFQUFFTCxTQUFTLENBQUNNLE1BRE47QUFFVkMsSUFBQUEsR0FBRyxFQUFFUCxTQUFTLENBQUNNLE1BRkw7QUFHVkUsSUFBQUEsU0FBUyxFQUFFUixTQUFTLENBQUNNLE1BSFg7QUFJVkcsSUFBQUEsS0FBSyxFQUFFVCxTQUFTLENBQUNNLE1BSlA7QUFLVkksSUFBQUEsTUFBTSxFQUFFVixTQUFTLENBQUNNLE1BTFI7QUFNVkssSUFBQUEsTUFBTSxFQUFFWCxTQUFTLENBQUNNLE1BTlI7QUFPVk0sSUFBQUEsZUFBZSxFQUFFWixTQUFTLENBQUNhLElBUGpCO0FBUVZDLElBQUFBLFdBQVcsRUFBRWQsU0FBUyxDQUFDTSxNQVJiO0FBU1ZTLElBQUFBLGNBQWMsRUFBRWYsU0FBUyxDQUFDTSxNQVRoQjtBQVVWVSxJQUFBQSxTQUFTLEVBQUVoQixTQUFTLENBQUNNLE1BVlg7QUFXVlcsSUFBQUEsZ0JBQWdCLEVBQUVqQixTQUFTLENBQUNNLE1BWGxCO0FBWVZZLElBQUFBLGVBQWUsRUFBRWxCLFNBQVMsQ0FBQ007QUFaakIsR0FBWixFQWFHO0FBQ0RQLElBQUFBLFNBREM7QUFFRG9CLElBQUFBLFNBQVMsRUFBRTtBQUZWLEdBYkg7QUFpQkEsU0FBT2xCLE1BQVA7QUFDRCxDQTdCRCIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXHJhZmFlXFxEZXNrdG9wXFx3ZWIzXFxwcm9qZXRvd2ViLW5lZ3JpdHVkZS1lbS1kZWJhdGVcXGFwaVxcbW9kZWxzXFwiLCJzb3VyY2VzQ29udGVudCI6WyIndXNlIHN0cmljdCc7XHJcbmNvbnN0IHtcclxuICBNb2RlbFxyXG59ID0gcmVxdWlyZSgnc2VxdWVsaXplJyk7XHJcbm1vZHVsZS5leHBvcnRzID0gKHNlcXVlbGl6ZSwgRGF0YVR5cGVzKSA9PiB7XHJcbiAgY2xhc3MgQWxidW5zIGV4dGVuZHMgTW9kZWwge1xyXG4gICAgLyoqXHJcbiAgICAgKiBIZWxwZXIgbWV0aG9kIGZvciBkZWZpbmluZyBhc3NvY2lhdGlvbnMuXHJcbiAgICAgKiBUaGlzIG1ldGhvZCBpcyBub3QgYSBwYXJ0IG9mIFNlcXVlbGl6ZSBsaWZlY3ljbGUuXHJcbiAgICAgKiBUaGUgYG1vZGVscy9pbmRleGAgZmlsZSB3aWxsIGNhbGwgdGhpcyBtZXRob2QgYXV0b21hdGljYWxseS5cclxuICAgICAqL1xyXG4gICAgc3RhdGljIGFzc29jaWF0ZShtb2RlbHMpIHtcclxuICAgICAgLy8gZGVmaW5lIGFzc29jaWF0aW9uIGhlcmVcclxuICAgIH1cclxuICB9O1xyXG4gIEFsYnVucy5pbml0KHtcclxuICAgIG5vbWU6IERhdGFUeXBlcy5TVFJJTkcsXHJcbiAgICBjcGY6IERhdGFUeXBlcy5TVFJJTkcsXHJcbiAgICB0ZWxfd2hhdHM6IERhdGFUeXBlcy5TVFJJTkcsXHJcbiAgICBlbWFpbDogRGF0YVR5cGVzLlNUUklORyxcclxuICAgIGVzdGFkbzogRGF0YVR5cGVzLlNUUklORyxcclxuICAgIGNpZGFkZTogRGF0YVR5cGVzLlNUUklORyxcclxuICAgIGRhdGFfbmFzY2ltZW50bzogRGF0YVR5cGVzLkRBVEUsXHJcbiAgICB0aXR1bG9fZm90bzogRGF0YVR5cGVzLlNUUklORyxcclxuICAgIG5vbWVfZm90b2dyYWZvOiBEYXRhVHlwZXMuU1RSSU5HLFxyXG4gICAgbm9tZV9mb3RvOiBEYXRhVHlwZXMuU1RSSU5HLFxyXG4gICAgbm9tZV9yZXNwb25zYXZlbDogRGF0YVR5cGVzLlNUUklORyxcclxuICAgIGNwZl9yZXNwb25zYXZlbDogRGF0YVR5cGVzLlNUUklOR1xyXG4gIH0sIHtcclxuICAgIHNlcXVlbGl6ZSxcclxuICAgIG1vZGVsTmFtZTogJ0FsYnVucycsXHJcbiAgfSk7XHJcbiAgcmV0dXJuIEFsYnVucztcclxufTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "albuns.js"
      ],
      "names": [
        "Model",
        "require",
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "Albuns",
        "associate",
        "models",
        "init",
        "nome",
        "STRING",
        "cpf",
        "tel_whats",
        "email",
        "estado",
        "cidade",
        "data_nascimento",
        "DATE",
        "titulo_foto",
        "nome_fotografo",
        "nome_foto",
        "nome_responsavel",
        "cpf_responsavel",
        "modelName"
      ],
      "mappings": "AAAA;;AACA,MAAM;AACJA,EAAAA;AADI,IAEFC,OAAO,CAAC,WAAD,CAFX;;AAGAC,MAAM,CAACC,OAAP,GAAiB,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AACzC,QAAMC,MAAN,SAAqBN,KAArB,CAA2B;AACzB;AACJ;AACA;AACA;AACA;AACoB,WAATO,SAAS,CAACC,MAAD,EAAS,CACvB;AACD;;AARwB;;AAS1B;AACDF,EAAAA,MAAM,CAACG,IAAP,CAAY;AACVC,IAAAA,IAAI,EAAEL,SAAS,CAACM,MADN;AAEVC,IAAAA,GAAG,EAAEP,SAAS,CAACM,MAFL;AAGVE,IAAAA,SAAS,EAAER,SAAS,CAACM,MAHX;AAIVG,IAAAA,KAAK,EAAET,SAAS,CAACM,MAJP;AAKVI,IAAAA,MAAM,EAAEV,SAAS,CAACM,MALR;AAMVK,IAAAA,MAAM,EAAEX,SAAS,CAACM,MANR;AAOVM,IAAAA,eAAe,EAAEZ,SAAS,CAACa,IAPjB;AAQVC,IAAAA,WAAW,EAAEd,SAAS,CAACM,MARb;AASVS,IAAAA,cAAc,EAAEf,SAAS,CAACM,MAThB;AAUVU,IAAAA,SAAS,EAAEhB,SAAS,CAACM,MAVX;AAWVW,IAAAA,gBAAgB,EAAEjB,SAAS,CAACM,MAXlB;AAYVY,IAAAA,eAAe,EAAElB,SAAS,CAACM;AAZjB,GAAZ,EAaG;AACDP,IAAAA,SADC;AAEDoB,IAAAA,SAAS,EAAE;AAFV,GAbH;AAiBA,SAAOlB,MAAP;AACD,CA7BD",
      "sourceRoot": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\models\\",
      "sourcesContent": [
        "'use strict';\r\nconst {\r\n  Model\r\n} = require('sequelize');\r\nmodule.exports = (sequelize, DataTypes) => {\r\n  class Albuns extends Model {\r\n    /**\r\n     * Helper method for defining associations.\r\n     * This method is not a part of Sequelize lifecycle.\r\n     * The `models/index` file will call this method automatically.\r\n     */\r\n    static associate(models) {\r\n      // define association here\r\n    }\r\n  };\r\n  Albuns.init({\r\n    nome: DataTypes.STRING,\r\n    cpf: DataTypes.STRING,\r\n    tel_whats: DataTypes.STRING,\r\n    email: DataTypes.STRING,\r\n    estado: DataTypes.STRING,\r\n    cidade: DataTypes.STRING,\r\n    data_nascimento: DataTypes.DATE,\r\n    titulo_foto: DataTypes.STRING,\r\n    nome_fotografo: DataTypes.STRING,\r\n    nome_foto: DataTypes.STRING,\r\n    nome_responsavel: DataTypes.STRING,\r\n    cpf_responsavel: DataTypes.STRING\r\n  }, {\r\n    sequelize,\r\n    modelName: 'Albuns',\r\n  });\r\n  return Albuns;\r\n};"
      ]
    },
    "sourceType": "module",
    "mtime": 1639055197530
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\rafae\\\\Desktop\\\\web3\\\\projetoweb-negritude-em-debate\\\\api\\\\models\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\rafae\\\\Desktop\\\\web3\\\\projetoweb-negritude-em-debate\",\"filename\":\"C:\\\\Users\\\\rafae\\\\Desktop\\\\web3\\\\projetoweb-negritude-em-debate\\\\api\\\\models\\\\usuarios.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\rafae\\\\Desktop\\\\web3\\\\projetoweb-negritude-em-debate\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\models\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate",
      "filename": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\models\\usuarios.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\models\\usuarios.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\models\\usuarios.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\models\\",
        "sourceFileName": "usuarios.js"
      }
    },
    "ast": null,
    "code": "'use strict';\n\nconst {\n  Model\n} = require('sequelize');\n\nmodule.exports = (sequelize, DataTypes) => {\n  class Usuarios extends Model {\n    /**\r\n     * Helper method for defining associations.\r\n     * This method is not a part of Sequelize lifecycle.\r\n     * The `models/index` file will call this method automatically.\r\n     */\n    static associate(models) {// define association here\n    }\n\n  }\n\n  ;\n  Usuarios.init({\n    nome: DataTypes.STRING,\n    email: DataTypes.STRING,\n    senha_hash: DataTypes.STRING\n  }, {\n    sequelize,\n    modelName: 'Usuarios'\n  });\n  return Usuarios;\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzdWFyaW9zLmpzIl0sIm5hbWVzIjpbIk1vZGVsIiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJzZXF1ZWxpemUiLCJEYXRhVHlwZXMiLCJVc3VhcmlvcyIsImFzc29jaWF0ZSIsIm1vZGVscyIsImluaXQiLCJub21lIiwiU1RSSU5HIiwiZW1haWwiLCJzZW5oYV9oYXNoIiwibW9kZWxOYW1lIl0sIm1hcHBpbmdzIjoiQUFBQTs7QUFDQSxNQUFNO0FBQ0pBLEVBQUFBO0FBREksSUFFRkMsT0FBTyxDQUFDLFdBQUQsQ0FGWDs7QUFHQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCLENBQUNDLFNBQUQsRUFBWUMsU0FBWixLQUEwQjtBQUN6QyxRQUFNQyxRQUFOLFNBQXVCTixLQUF2QixDQUE2QjtBQUMzQjtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ29CLFdBQVRPLFNBQVMsQ0FBQ0MsTUFBRCxFQUFTLENBQ3ZCO0FBQ0Q7O0FBUjBCOztBQVM1QjtBQUNERixFQUFBQSxRQUFRLENBQUNHLElBQVQsQ0FBYztBQUNaQyxJQUFBQSxJQUFJLEVBQUVMLFNBQVMsQ0FBQ00sTUFESjtBQUVaQyxJQUFBQSxLQUFLLEVBQUVQLFNBQVMsQ0FBQ00sTUFGTDtBQUdaRSxJQUFBQSxVQUFVLEVBQUVSLFNBQVMsQ0FBQ007QUFIVixHQUFkLEVBSUc7QUFDRFAsSUFBQUEsU0FEQztBQUVEVSxJQUFBQSxTQUFTLEVBQUU7QUFGVixHQUpIO0FBUUEsU0FBT1IsUUFBUDtBQUNELENBcEJEIiwic291cmNlUm9vdCI6IkM6XFxVc2Vyc1xccmFmYWVcXERlc2t0b3BcXHdlYjNcXHByb2pldG93ZWItbmVncml0dWRlLWVtLWRlYmF0ZVxcYXBpXFxtb2RlbHNcXCIsInNvdXJjZXNDb250ZW50IjpbIid1c2Ugc3RyaWN0JztcclxuY29uc3Qge1xyXG4gIE1vZGVsXHJcbn0gPSByZXF1aXJlKCdzZXF1ZWxpemUnKTtcclxubW9kdWxlLmV4cG9ydHMgPSAoc2VxdWVsaXplLCBEYXRhVHlwZXMpID0+IHtcclxuICBjbGFzcyBVc3VhcmlvcyBleHRlbmRzIE1vZGVsIHtcclxuICAgIC8qKlxyXG4gICAgICogSGVscGVyIG1ldGhvZCBmb3IgZGVmaW5pbmcgYXNzb2NpYXRpb25zLlxyXG4gICAgICogVGhpcyBtZXRob2QgaXMgbm90IGEgcGFydCBvZiBTZXF1ZWxpemUgbGlmZWN5Y2xlLlxyXG4gICAgICogVGhlIGBtb2RlbHMvaW5kZXhgIGZpbGUgd2lsbCBjYWxsIHRoaXMgbWV0aG9kIGF1dG9tYXRpY2FsbHkuXHJcbiAgICAgKi9cclxuICAgIHN0YXRpYyBhc3NvY2lhdGUobW9kZWxzKSB7XHJcbiAgICAgIC8vIGRlZmluZSBhc3NvY2lhdGlvbiBoZXJlXHJcbiAgICB9XHJcbiAgfTtcclxuICBVc3Vhcmlvcy5pbml0KHtcclxuICAgIG5vbWU6IERhdGFUeXBlcy5TVFJJTkcsXHJcbiAgICBlbWFpbDogRGF0YVR5cGVzLlNUUklORyxcclxuICAgIHNlbmhhX2hhc2g6IERhdGFUeXBlcy5TVFJJTkdcclxuICB9LCB7XHJcbiAgICBzZXF1ZWxpemUsXHJcbiAgICBtb2RlbE5hbWU6ICdVc3VhcmlvcycsXHJcbiAgfSk7XHJcbiAgcmV0dXJuIFVzdWFyaW9zO1xyXG59OyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "usuarios.js"
      ],
      "names": [
        "Model",
        "require",
        "module",
        "exports",
        "sequelize",
        "DataTypes",
        "Usuarios",
        "associate",
        "models",
        "init",
        "nome",
        "STRING",
        "email",
        "senha_hash",
        "modelName"
      ],
      "mappings": "AAAA;;AACA,MAAM;AACJA,EAAAA;AADI,IAEFC,OAAO,CAAC,WAAD,CAFX;;AAGAC,MAAM,CAACC,OAAP,GAAiB,CAACC,SAAD,EAAYC,SAAZ,KAA0B;AACzC,QAAMC,QAAN,SAAuBN,KAAvB,CAA6B;AAC3B;AACJ;AACA;AACA;AACA;AACoB,WAATO,SAAS,CAACC,MAAD,EAAS,CACvB;AACD;;AAR0B;;AAS5B;AACDF,EAAAA,QAAQ,CAACG,IAAT,CAAc;AACZC,IAAAA,IAAI,EAAEL,SAAS,CAACM,MADJ;AAEZC,IAAAA,KAAK,EAAEP,SAAS,CAACM,MAFL;AAGZE,IAAAA,UAAU,EAAER,SAAS,CAACM;AAHV,GAAd,EAIG;AACDP,IAAAA,SADC;AAEDU,IAAAA,SAAS,EAAE;AAFV,GAJH;AAQA,SAAOR,QAAP;AACD,CApBD",
      "sourceRoot": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\models\\",
      "sourcesContent": [
        "'use strict';\r\nconst {\r\n  Model\r\n} = require('sequelize');\r\nmodule.exports = (sequelize, DataTypes) => {\r\n  class Usuarios extends Model {\r\n    /**\r\n     * Helper method for defining associations.\r\n     * This method is not a part of Sequelize lifecycle.\r\n     * The `models/index` file will call this method automatically.\r\n     */\r\n    static associate(models) {\r\n      // define association here\r\n    }\r\n  };\r\n  Usuarios.init({\r\n    nome: DataTypes.STRING,\r\n    email: DataTypes.STRING,\r\n    senha_hash: DataTypes.STRING\r\n  }, {\r\n    sequelize,\r\n    modelName: 'Usuarios',\r\n  });\r\n  return Usuarios;\r\n};"
      ]
    },
    "sourceType": "module",
    "mtime": 1639055197621
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\rafae\\\\Desktop\\\\web3\\\\projetoweb-negritude-em-debate\\\\api\\\\middleware\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\rafae\\\\Desktop\\\\web3\\\\projetoweb-negritude-em-debate\",\"filename\":\"C:\\\\Users\\\\rafae\\\\Desktop\\\\web3\\\\projetoweb-negritude-em-debate\\\\api\\\\middleware\\\\auth.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\rafae\\\\Desktop\\\\web3\\\\projetoweb-negritude-em-debate\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\middleware\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate",
      "filename": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\middleware\\auth.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\middleware\\auth.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\middleware\\auth.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\middleware\\",
        "sourceFileName": "auth.js"
      }
    },
    "ast": null,
    "code": "const jwt = require('jsonwebtoken');\n\nmodule.exports = (req, res, next) => {\n  const token = req.headers['x-access-token'];\n  jwt.verify(token, process.env.CHAVE_JWT, (erro, decode) => {\n    if (erro) {\n      if (erro.name === \"TokenExpiredError\") return res.status(401).json({\n        erro: erro.message,\n        expiradoEm: erro.expiredAt\n      }); //return res.status(401).json(\"Tempo expirado!\");    \n\n      return res.status(401).json(\"Não Autorizado\");\n    }\n\n    console.log(\"Decode.id: \" + decode.id);\n    next();\n  });\n};\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImF1dGguanMiXSwibmFtZXMiOlsiand0IiwicmVxdWlyZSIsIm1vZHVsZSIsImV4cG9ydHMiLCJyZXEiLCJyZXMiLCJuZXh0IiwidG9rZW4iLCJoZWFkZXJzIiwidmVyaWZ5IiwicHJvY2VzcyIsImVudiIsIkNIQVZFX0pXVCIsImVycm8iLCJkZWNvZGUiLCJuYW1lIiwic3RhdHVzIiwianNvbiIsIm1lc3NhZ2UiLCJleHBpcmFkb0VtIiwiZXhwaXJlZEF0IiwiY29uc29sZSIsImxvZyIsImlkIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxHQUFHLEdBQUdDLE9BQU8sQ0FBQyxjQUFELENBQW5COztBQUVBQyxNQUFNLENBQUNDLE9BQVAsR0FBaUIsQ0FBQ0MsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsS0FBb0I7QUFDakMsUUFBTUMsS0FBSyxHQUFHSCxHQUFHLENBQUNJLE9BQUosQ0FBWSxnQkFBWixDQUFkO0FBQ0FSLEVBQUFBLEdBQUcsQ0FBQ1MsTUFBSixDQUFXRixLQUFYLEVBQWtCRyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsU0FBOUIsRUFBeUMsQ0FBQ0MsSUFBRCxFQUFPQyxNQUFQLEtBQWtCO0FBQ3ZELFFBQUlELElBQUosRUFBUztBQUNMLFVBQUlBLElBQUksQ0FBQ0UsSUFBTCxLQUFjLG1CQUFsQixFQUNJLE9BQU9WLEdBQUcsQ0FBQ1csTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCO0FBQUVKLFFBQUFBLElBQUksRUFBRUEsSUFBSSxDQUFDSyxPQUFiO0FBQXNCQyxRQUFBQSxVQUFVLEVBQUVOLElBQUksQ0FBQ087QUFBdkMsT0FBckIsQ0FBUCxDQUZDLENBR0Q7O0FBQ0osYUFBT2YsR0FBRyxDQUFDVyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUIsZ0JBQXJCLENBQVA7QUFDSDs7QUFDREksSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksZ0JBQWVSLE1BQU0sQ0FBQ1MsRUFBbEM7QUFDQWpCLElBQUFBLElBQUk7QUFDUCxHQVREO0FBVUgsQ0FaRCIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXHJhZmFlXFxEZXNrdG9wXFx3ZWIzXFxwcm9qZXRvd2ViLW5lZ3JpdHVkZS1lbS1kZWJhdGVcXGFwaVxcbWlkZGxld2FyZVxcIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgand0ID0gcmVxdWlyZSgnanNvbndlYnRva2VuJyk7XHJcblxyXG5tb2R1bGUuZXhwb3J0cyA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xyXG4gICAgY29uc3QgdG9rZW4gPSByZXEuaGVhZGVyc1sneC1hY2Nlc3MtdG9rZW4nXTtcclxuICAgIGp3dC52ZXJpZnkodG9rZW4sIHByb2Nlc3MuZW52LkNIQVZFX0pXVCwgKGVycm8sIGRlY29kZSkgPT4ge1xyXG4gICAgICAgIGlmIChlcnJvKXtcclxuICAgICAgICAgICAgaWYgKGVycm8ubmFtZSA9PT0gXCJUb2tlbkV4cGlyZWRFcnJvclwiKVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAxKS5qc29uKHsgZXJybzogZXJyby5tZXNzYWdlLCBleHBpcmFkb0VtOiBlcnJvLmV4cGlyZWRBdCB9KTtcclxuICAgICAgICAgICAgICAgIC8vcmV0dXJuIHJlcy5zdGF0dXMoNDAxKS5qc29uKFwiVGVtcG8gZXhwaXJhZG8hXCIpOyAgICBcclxuICAgICAgICAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAxKS5qc29uKFwiTsOjbyBBdXRvcml6YWRvXCIpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjb25zb2xlLmxvZyhcIkRlY29kZS5pZDogXCIrIGRlY29kZS5pZCk7XHJcbiAgICAgICAgbmV4dCgpO1xyXG4gICAgfSlcclxufSJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "auth.js"
      ],
      "names": [
        "jwt",
        "require",
        "module",
        "exports",
        "req",
        "res",
        "next",
        "token",
        "headers",
        "verify",
        "process",
        "env",
        "CHAVE_JWT",
        "erro",
        "decode",
        "name",
        "status",
        "json",
        "message",
        "expiradoEm",
        "expiredAt",
        "console",
        "log",
        "id"
      ],
      "mappings": "AAAA,MAAMA,GAAG,GAAGC,OAAO,CAAC,cAAD,CAAnB;;AAEAC,MAAM,CAACC,OAAP,GAAiB,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;AACjC,QAAMC,KAAK,GAAGH,GAAG,CAACI,OAAJ,CAAY,gBAAZ,CAAd;AACAR,EAAAA,GAAG,CAACS,MAAJ,CAAWF,KAAX,EAAkBG,OAAO,CAACC,GAAR,CAAYC,SAA9B,EAAyC,CAACC,IAAD,EAAOC,MAAP,KAAkB;AACvD,QAAID,IAAJ,EAAS;AACL,UAAIA,IAAI,CAACE,IAAL,KAAc,mBAAlB,EACI,OAAOV,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB;AAAEJ,QAAAA,IAAI,EAAEA,IAAI,CAACK,OAAb;AAAsBC,QAAAA,UAAU,EAAEN,IAAI,CAACO;AAAvC,OAArB,CAAP,CAFC,CAGD;;AACJ,aAAOf,GAAG,CAACW,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,gBAArB,CAAP;AACH;;AACDI,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAeR,MAAM,CAACS,EAAlC;AACAjB,IAAAA,IAAI;AACP,GATD;AAUH,CAZD",
      "sourceRoot": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\middleware\\",
      "sourcesContent": [
        "const jwt = require('jsonwebtoken');\r\n\r\nmodule.exports = (req, res, next) => {\r\n    const token = req.headers['x-access-token'];\r\n    jwt.verify(token, process.env.CHAVE_JWT, (erro, decode) => {\r\n        if (erro){\r\n            if (erro.name === \"TokenExpiredError\")\r\n                return res.status(401).json({ erro: erro.message, expiradoEm: erro.expiredAt });\r\n                //return res.status(401).json(\"Tempo expirado!\");    \r\n            return res.status(401).json(\"Não Autorizado\");\r\n        }\r\n        console.log(\"Decode.id: \"+ decode.id);\r\n        next();\r\n    })\r\n}"
      ]
    },
    "sourceType": "module",
    "mtime": 1639055197528
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\rafae\\\\Desktop\\\\web3\\\\projetoweb-negritude-em-debate\\\\api\\\\routes\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\rafae\\\\Desktop\\\\web3\\\\projetoweb-negritude-em-debate\",\"filename\":\"C:\\\\Users\\\\rafae\\\\Desktop\\\\web3\\\\projetoweb-negritude-em-debate\\\\api\\\\routes\\\\usuariosRoute.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\rafae\\\\Desktop\\\\web3\\\\projetoweb-negritude-em-debate\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\routes\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate",
      "filename": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\routes\\usuariosRoute.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\routes\\usuariosRoute.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\routes\\usuariosRoute.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\routes\\",
        "sourceFileName": "usuariosRoute.js"
      }
    },
    "ast": null,
    "code": "const {\n  Router\n} = require('express');\n\nconst UsuarioController = require('../controllers/UsuarioController');\n\nconst auth = require('../middleware/auth'); //Iniciando o Router do express\n\n\nconst router = Router();\nrouter.get('/login', (request, response) => {\n  // response.sendFile(path.join(__dirname, '../../pages/html/album_form.html');\n  response.render('login');\n});\nrouter.get('/logado', (request, response) => {\n  // response.sendFile(path.join(__dirname, '../../pages/html/album_form.html');\n  response.render('relatorio');\n});\nrouter.get('/index', (request, response) => {\n  // response.sendFile(path.join(__dirname, '../../pages/html/album_form.html');\n  response.render('index');\n});\nrouter.get('/equipe', (request, response) => {\n  // response.sendFile(path.join(__dirname, '../../pages/html/album_form.html');\n  response.render('equipe');\n});\nrouter.get('/logout', (request, response) => {\n  // response.sendFile(path.join(__dirname, '../../pages/html/album_form.html');\n  router.post('/login', UsuarioController.logout);\n});\nrouter.get('/usuarios', UsuarioController.pegaTodosOsUsuarios);\nrouter.get('/usuarios/:id', UsuarioController.pegaUmUsuario);\nrouter.post('/usuarios', UsuarioController.criaUsuario);\nrouter.put('/usuarios/:id', UsuarioController.atualizaUsuario);\nrouter.delete('/usuarios/:id', UsuarioController.apagarUsuario);\nrouter.post('/login', UsuarioController.login);\nmodule.exports = router;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInVzdWFyaW9zUm91dGUuanMiXSwibmFtZXMiOlsiUm91dGVyIiwicmVxdWlyZSIsIlVzdWFyaW9Db250cm9sbGVyIiwiYXV0aCIsInJvdXRlciIsImdldCIsInJlcXVlc3QiLCJyZXNwb25zZSIsInJlbmRlciIsInBvc3QiLCJsb2dvdXQiLCJwZWdhVG9kb3NPc1VzdWFyaW9zIiwicGVnYVVtVXN1YXJpbyIsImNyaWFVc3VhcmlvIiwicHV0IiwiYXR1YWxpemFVc3VhcmlvIiwiZGVsZXRlIiwiYXBhZ2FyVXN1YXJpbyIsImxvZ2luIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJtYXBwaW5ncyI6IkFBQUEsTUFBTTtBQUFFQSxFQUFBQTtBQUFGLElBQWFDLE9BQU8sQ0FBQyxTQUFELENBQTFCOztBQUNBLE1BQU1DLGlCQUFpQixHQUFHRCxPQUFPLENBQUMsa0NBQUQsQ0FBakM7O0FBQ0EsTUFBTUUsSUFBSSxHQUFHRixPQUFPLENBQUMsb0JBQUQsQ0FBcEIsQyxDQUVBOzs7QUFDQSxNQUFNRyxNQUFNLEdBQUdKLE1BQU0sRUFBckI7QUFDQUksTUFBTSxDQUFDQyxHQUFQLENBQVcsUUFBWCxFQUFxQixDQUFDQyxPQUFELEVBQVVDLFFBQVYsS0FBdUI7QUFDeEM7QUFDQUEsRUFBQUEsUUFBUSxDQUFDQyxNQUFULENBQWdCLE9BQWhCO0FBQ0QsQ0FISDtBQUlBSixNQUFNLENBQUNDLEdBQVAsQ0FBVyxTQUFYLEVBQXNCLENBQUNDLE9BQUQsRUFBVUMsUUFBVixLQUF1QjtBQUN6QztBQUNBQSxFQUFBQSxRQUFRLENBQUNDLE1BQVQsQ0FBZ0IsV0FBaEI7QUFDSCxDQUhEO0FBS0FKLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXLFFBQVgsRUFBcUIsQ0FBQ0MsT0FBRCxFQUFVQyxRQUFWLEtBQXVCO0FBQzFDO0FBQ0FBLEVBQUFBLFFBQVEsQ0FBQ0MsTUFBVCxDQUFnQixPQUFoQjtBQUNELENBSEQ7QUFJQUosTUFBTSxDQUFDQyxHQUFQLENBQVcsU0FBWCxFQUFzQixDQUFDQyxPQUFELEVBQVVDLFFBQVYsS0FBdUI7QUFDM0M7QUFDQUEsRUFBQUEsUUFBUSxDQUFDQyxNQUFULENBQWdCLFFBQWhCO0FBQ0QsQ0FIRDtBQUlBSixNQUFNLENBQUNDLEdBQVAsQ0FBVyxTQUFYLEVBQXNCLENBQUNDLE9BQUQsRUFBVUMsUUFBVixLQUF1QjtBQUMzQztBQUNBSCxFQUFBQSxNQUFNLENBQUNLLElBQVAsQ0FBWSxRQUFaLEVBQXVCUCxpQkFBaUIsQ0FBQ1EsTUFBekM7QUFDRCxDQUhEO0FBTUFOLE1BQU0sQ0FBQ0MsR0FBUCxDQUFXLFdBQVgsRUFBd0JILGlCQUFpQixDQUFDUyxtQkFBMUM7QUFDQVAsTUFBTSxDQUFDQyxHQUFQLENBQVcsZUFBWCxFQUE0QkgsaUJBQWlCLENBQUNVLGFBQTlDO0FBQ0FSLE1BQU0sQ0FBQ0ssSUFBUCxDQUFZLFdBQVosRUFBeUJQLGlCQUFpQixDQUFDVyxXQUEzQztBQUNBVCxNQUFNLENBQUNVLEdBQVAsQ0FBVyxlQUFYLEVBQTRCWixpQkFBaUIsQ0FBQ2EsZUFBOUM7QUFDQVgsTUFBTSxDQUFDWSxNQUFQLENBQWMsZUFBZCxFQUErQmQsaUJBQWlCLENBQUNlLGFBQWpEO0FBQ0FiLE1BQU0sQ0FBQ0ssSUFBUCxDQUFZLFFBQVosRUFBdUJQLGlCQUFpQixDQUFDZ0IsS0FBekM7QUFHQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCaEIsTUFBakIiLCJzb3VyY2VSb290IjoiQzpcXFVzZXJzXFxyYWZhZVxcRGVza3RvcFxcd2ViM1xccHJvamV0b3dlYi1uZWdyaXR1ZGUtZW0tZGViYXRlXFxhcGlcXHJvdXRlc1xcIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3QgeyBSb3V0ZXIgfSA9IHJlcXVpcmUoJ2V4cHJlc3MnKTtcclxuY29uc3QgVXN1YXJpb0NvbnRyb2xsZXIgPSByZXF1aXJlKCcuLi9jb250cm9sbGVycy9Vc3VhcmlvQ29udHJvbGxlcicpO1xyXG5jb25zdCBhdXRoID0gcmVxdWlyZSgnLi4vbWlkZGxld2FyZS9hdXRoJyk7XHJcblxyXG4vL0luaWNpYW5kbyBvIFJvdXRlciBkbyBleHByZXNzXHJcbmNvbnN0IHJvdXRlciA9IFJvdXRlcigpO1xyXG5yb3V0ZXIuZ2V0KCcvbG9naW4nLCAocmVxdWVzdCwgcmVzcG9uc2UpID0+IHtcclxuICAgIC8vIHJlc3BvbnNlLnNlbmRGaWxlKHBhdGguam9pbihfX2Rpcm5hbWUsICcuLi8uLi9wYWdlcy9odG1sL2FsYnVtX2Zvcm0uaHRtbCcpO1xyXG4gICAgcmVzcG9uc2UucmVuZGVyKCdsb2dpbicpO1xyXG4gIH0pO1xyXG5yb3V0ZXIuZ2V0KCcvbG9nYWRvJywgKHJlcXVlc3QsIHJlc3BvbnNlKSA9PiB7XHJcbiAgICAvLyByZXNwb25zZS5zZW5kRmlsZShwYXRoLmpvaW4oX19kaXJuYW1lLCAnLi4vLi4vcGFnZXMvaHRtbC9hbGJ1bV9mb3JtLmh0bWwnKTtcclxuICAgIHJlc3BvbnNlLnJlbmRlcigncmVsYXRvcmlvJyk7XHJcbn0pO1xyXG5cclxucm91dGVyLmdldCgnL2luZGV4JywgKHJlcXVlc3QsIHJlc3BvbnNlKSA9PiB7XHJcbiAgLy8gcmVzcG9uc2Uuc2VuZEZpbGUocGF0aC5qb2luKF9fZGlybmFtZSwgJy4uLy4uL3BhZ2VzL2h0bWwvYWxidW1fZm9ybS5odG1sJyk7XHJcbiAgcmVzcG9uc2UucmVuZGVyKCdpbmRleCcpO1xyXG59KTtcclxucm91dGVyLmdldCgnL2VxdWlwZScsIChyZXF1ZXN0LCByZXNwb25zZSkgPT4ge1xyXG4gIC8vIHJlc3BvbnNlLnNlbmRGaWxlKHBhdGguam9pbihfX2Rpcm5hbWUsICcuLi8uLi9wYWdlcy9odG1sL2FsYnVtX2Zvcm0uaHRtbCcpO1xyXG4gIHJlc3BvbnNlLnJlbmRlcignZXF1aXBlJyk7XHJcbn0pO1xyXG5yb3V0ZXIuZ2V0KCcvbG9nb3V0JywgKHJlcXVlc3QsIHJlc3BvbnNlKSA9PiB7XHJcbiAgLy8gcmVzcG9uc2Uuc2VuZEZpbGUocGF0aC5qb2luKF9fZGlybmFtZSwgJy4uLy4uL3BhZ2VzL2h0bWwvYWxidW1fZm9ybS5odG1sJyk7XHJcbiAgcm91dGVyLnBvc3QoJy9sb2dpbicsICBVc3VhcmlvQ29udHJvbGxlci5sb2dvdXQpO1xyXG59KTtcclxuICBcclxuXHJcbnJvdXRlci5nZXQoJy91c3VhcmlvcycsIFVzdWFyaW9Db250cm9sbGVyLnBlZ2FUb2Rvc09zVXN1YXJpb3MpO1xyXG5yb3V0ZXIuZ2V0KCcvdXN1YXJpb3MvOmlkJywgVXN1YXJpb0NvbnRyb2xsZXIucGVnYVVtVXN1YXJpbyk7XHJcbnJvdXRlci5wb3N0KCcvdXN1YXJpb3MnLCBVc3VhcmlvQ29udHJvbGxlci5jcmlhVXN1YXJpbyk7XHJcbnJvdXRlci5wdXQoJy91c3Vhcmlvcy86aWQnLCBVc3VhcmlvQ29udHJvbGxlci5hdHVhbGl6YVVzdWFyaW8pO1xyXG5yb3V0ZXIuZGVsZXRlKCcvdXN1YXJpb3MvOmlkJywgVXN1YXJpb0NvbnRyb2xsZXIuYXBhZ2FyVXN1YXJpbyk7XHJcbnJvdXRlci5wb3N0KCcvbG9naW4nLCAgVXN1YXJpb0NvbnRyb2xsZXIubG9naW4pO1xyXG5cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gcm91dGVyOyJdfQ==",
    "map": {
      "version": 3,
      "sources": [
        "usuariosRoute.js"
      ],
      "names": [
        "Router",
        "require",
        "UsuarioController",
        "auth",
        "router",
        "get",
        "request",
        "response",
        "render",
        "post",
        "logout",
        "pegaTodosOsUsuarios",
        "pegaUmUsuario",
        "criaUsuario",
        "put",
        "atualizaUsuario",
        "delete",
        "apagarUsuario",
        "login",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAM;AAAEA,EAAAA;AAAF,IAAaC,OAAO,CAAC,SAAD,CAA1B;;AACA,MAAMC,iBAAiB,GAAGD,OAAO,CAAC,kCAAD,CAAjC;;AACA,MAAME,IAAI,GAAGF,OAAO,CAAC,oBAAD,CAApB,C,CAEA;;;AACA,MAAMG,MAAM,GAAGJ,MAAM,EAArB;AACAI,MAAM,CAACC,GAAP,CAAW,QAAX,EAAqB,CAACC,OAAD,EAAUC,QAAV,KAAuB;AACxC;AACAA,EAAAA,QAAQ,CAACC,MAAT,CAAgB,OAAhB;AACD,CAHH;AAIAJ,MAAM,CAACC,GAAP,CAAW,SAAX,EAAsB,CAACC,OAAD,EAAUC,QAAV,KAAuB;AACzC;AACAA,EAAAA,QAAQ,CAACC,MAAT,CAAgB,WAAhB;AACH,CAHD;AAKAJ,MAAM,CAACC,GAAP,CAAW,QAAX,EAAqB,CAACC,OAAD,EAAUC,QAAV,KAAuB;AAC1C;AACAA,EAAAA,QAAQ,CAACC,MAAT,CAAgB,OAAhB;AACD,CAHD;AAIAJ,MAAM,CAACC,GAAP,CAAW,SAAX,EAAsB,CAACC,OAAD,EAAUC,QAAV,KAAuB;AAC3C;AACAA,EAAAA,QAAQ,CAACC,MAAT,CAAgB,QAAhB;AACD,CAHD;AAIAJ,MAAM,CAACC,GAAP,CAAW,SAAX,EAAsB,CAACC,OAAD,EAAUC,QAAV,KAAuB;AAC3C;AACAH,EAAAA,MAAM,CAACK,IAAP,CAAY,QAAZ,EAAuBP,iBAAiB,CAACQ,MAAzC;AACD,CAHD;AAMAN,MAAM,CAACC,GAAP,CAAW,WAAX,EAAwBH,iBAAiB,CAACS,mBAA1C;AACAP,MAAM,CAACC,GAAP,CAAW,eAAX,EAA4BH,iBAAiB,CAACU,aAA9C;AACAR,MAAM,CAACK,IAAP,CAAY,WAAZ,EAAyBP,iBAAiB,CAACW,WAA3C;AACAT,MAAM,CAACU,GAAP,CAAW,eAAX,EAA4BZ,iBAAiB,CAACa,eAA9C;AACAX,MAAM,CAACY,MAAP,CAAc,eAAd,EAA+Bd,iBAAiB,CAACe,aAAjD;AACAb,MAAM,CAACK,IAAP,CAAY,QAAZ,EAAuBP,iBAAiB,CAACgB,KAAzC;AAGAC,MAAM,CAACC,OAAP,GAAiBhB,MAAjB",
      "sourceRoot": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\routes\\",
      "sourcesContent": [
        "const { Router } = require('express');\r\nconst UsuarioController = require('../controllers/UsuarioController');\r\nconst auth = require('../middleware/auth');\r\n\r\n//Iniciando o Router do express\r\nconst router = Router();\r\nrouter.get('/login', (request, response) => {\r\n    // response.sendFile(path.join(__dirname, '../../pages/html/album_form.html');\r\n    response.render('login');\r\n  });\r\nrouter.get('/logado', (request, response) => {\r\n    // response.sendFile(path.join(__dirname, '../../pages/html/album_form.html');\r\n    response.render('relatorio');\r\n});\r\n\r\nrouter.get('/index', (request, response) => {\r\n  // response.sendFile(path.join(__dirname, '../../pages/html/album_form.html');\r\n  response.render('index');\r\n});\r\nrouter.get('/equipe', (request, response) => {\r\n  // response.sendFile(path.join(__dirname, '../../pages/html/album_form.html');\r\n  response.render('equipe');\r\n});\r\nrouter.get('/logout', (request, response) => {\r\n  // response.sendFile(path.join(__dirname, '../../pages/html/album_form.html');\r\n  router.post('/login',  UsuarioController.logout);\r\n});\r\n  \r\n\r\nrouter.get('/usuarios', UsuarioController.pegaTodosOsUsuarios);\r\nrouter.get('/usuarios/:id', UsuarioController.pegaUmUsuario);\r\nrouter.post('/usuarios', UsuarioController.criaUsuario);\r\nrouter.put('/usuarios/:id', UsuarioController.atualizaUsuario);\r\nrouter.delete('/usuarios/:id', UsuarioController.apagarUsuario);\r\nrouter.post('/login',  UsuarioController.login);\r\n\r\n\r\nmodule.exports = router;"
      ]
    },
    "sourceType": "module",
    "mtime": 1639193610582
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\rafae\\\\Desktop\\\\web3\\\\projetoweb-negritude-em-debate\\\\api\\\\controllers\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\rafae\\\\Desktop\\\\web3\\\\projetoweb-negritude-em-debate\",\"filename\":\"C:\\\\Users\\\\rafae\\\\Desktop\\\\web3\\\\projetoweb-negritude-em-debate\\\\api\\\\controllers\\\\UsuarioController.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\rafae\\\\Desktop\\\\web3\\\\projetoweb-negritude-em-debate\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\controllers\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate",
      "filename": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\controllers\\UsuarioController.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\controllers\\UsuarioController.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\controllers\\UsuarioController.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\controllers\\",
        "sourceFileName": "UsuarioController.js"
      }
    },
    "ast": null,
    "code": "const database = require('../models');\n\nconst bcrypt = require('bcrypt');\n\nconst jwt = require('jsonwebtoken');\n\nconst CHAVE_JWT = \"a/KeyBW7JqD++rTxKjX0hobwsH0GZpG2fsUDcvBrSRooLZbpIsxbCErAwFCStgZydGCRuYLiLFGRaBM6GM/FaRmSaAVw0yEeAyH1j0qoYdMh/BukSKKjvyLV9poMg7tD5tx7E8QI/7Fuf8uOS04kTMMavDBfNQUywhaF9c1jByIR9CAh6LHMf6G1OXCpUjlcVd+GwRc9qC20mAIA2MgD0PmN8w2AkMKm3WwMpOuQ/EgFTHQTSq1/1lrnjE4OTNHtmiadYoc7CWgMmoGW2dKFdw/GNNkJ7ZkYaMHe1HTOJ3xjB/jC4q/tiJcjbhdadscsQPa7br/evDcGGezmQX9pnQ==\";\n\nclass UsuarioController {\n  static async pegaTodosOsUsuarios(req, res) {\n    try {\n      const todosOsUsuarios = await database.Usuarios.findAll();\n      return res.status(200).json(todosOsUsuarios);\n    } catch (error) {\n      return res.status(500).json(error.message);\n    }\n  }\n\n  static async pegaUmUsuario(req, res) {\n    const {\n      id\n    } = req.params;\n\n    try {\n      const umUsuario = await database.Usuarios.findOne({\n        where: {\n          id: Number(id)\n        }\n      });\n      return res.status(200).json(umUsuario);\n    } catch (error) {\n      return res.status(500).json(error.message);\n    }\n  }\n\n  static async gerarSenhaHash(senha) {\n    const custoHash = 12;\n    return bcrypt.hash(senha, custoHash);\n  }\n\n  static validaSenha(senha) {\n    return true; //throw new Error(\"Senha inválida\");\n  }\n\n  static async criaUsuario(req, res) {\n    const novoUsuario = req.body;\n\n    try {\n      UsuarioController.validaSenha(novoUsuario.senha);\n      const senhaHash = await UsuarioController.gerarSenhaHash(novoUsuario.senha);\n      delete novoUsuario.senha;\n      novoUsuario[\"senha_hash\"] = senhaHash;\n      const novoUsuarioCriado = await database.Usuarios.create(novoUsuario);\n      return res.status(200).json(novoUsuarioCriado);\n    } catch (error) {\n      return res.status(500).json(error.message);\n    }\n  }\n\n  static async atualizaUsuario(req, res) {\n    const novasInfosUsuario = req.body;\n    const {\n      id\n    } = req.params;\n\n    try {\n      await database.Usuarios.update(novasInfosUsuario, {\n        where: {\n          id: Number(id)\n        }\n      });\n      const usuarioAtualizado = await database.Usuarios.findOne({\n        where: {\n          id: Number(id)\n        }\n      });\n      return res.status(200).json(usuarioAtualizado);\n    } catch (error) {\n      return res.status(500).json(error.message);\n    }\n  }\n\n  static async apagarUsuario(req, res) {\n    const {\n      id\n    } = req.params;\n\n    try {\n      await database.Usuarios.destroy({\n        where: {\n          id: Number(id)\n        }\n      });\n      return res.status(200).json({\n        mensagem: `id ${id} deletado`\n      });\n    } catch (error) {\n      return res.status(500).json(error.message);\n    }\n  }\n\n  static async pegaUmUsuarioPorEmail(email) {\n    try {\n      const usuario = await database.Usuarios.findOne({\n        where: {\n          email: email\n        }\n      });\n      return usuario;\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  static verificaUsuario(usuario) {\n    if (!usuario) {\n      throw new Error(\"Usuário não encontrado\");\n    }\n  }\n\n  static async verificaSenha(senha, senhaHash) {\n    var MD5 = require(\"crypto-js/md5\");\n\n    const hash = MD5(senha).toString();\n    console.log(hash);\n    let senhaValida = false;\n    console.log(senhaHash);\n\n    if (hash === senhaHash) {\n      senhaValida = true;\n    }\n\n    console.log(hash);\n    console.log(senhaHash);\n    console.log(senhaValida);\n    if (!senhaValida) throw new Error(\"Senha inválida!\");\n  }\n\n  static async login(req, res) {\n    const {\n      email\n    } = req.body;\n    const {\n      senha\n    } = req.body;\n\n    try {\n      const usuario = await UsuarioController.pegaUmUsuarioPorEmail(email);\n      UsuarioController.verificaUsuario(usuario);\n      await UsuarioController.verificaSenha(senha, usuario.senha_hash);\n      console.log(CHAVE_JWT);\n      const token = jwt.sign({\n        id: usuario.id\n      }, CHAVE_JWT, {\n        expiresIn: '15m'\n      });\n      res.set('Authorization', token);\n      return res.redirect('/logado');\n    } catch (error) {\n      return res.status(401).json(error.message);\n    }\n  }\n\n  static async logout(req, res) {}\n\n}\n\nmodule.exports = UsuarioController;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,",
    "map": {
      "version": 3,
      "sources": [
        "UsuarioController.js"
      ],
      "names": [
        "database",
        "require",
        "bcrypt",
        "jwt",
        "CHAVE_JWT",
        "UsuarioController",
        "pegaTodosOsUsuarios",
        "req",
        "res",
        "todosOsUsuarios",
        "Usuarios",
        "findAll",
        "status",
        "json",
        "error",
        "message",
        "pegaUmUsuario",
        "id",
        "params",
        "umUsuario",
        "findOne",
        "where",
        "Number",
        "gerarSenhaHash",
        "senha",
        "custoHash",
        "hash",
        "validaSenha",
        "criaUsuario",
        "novoUsuario",
        "body",
        "senhaHash",
        "novoUsuarioCriado",
        "create",
        "atualizaUsuario",
        "novasInfosUsuario",
        "update",
        "usuarioAtualizado",
        "apagarUsuario",
        "destroy",
        "mensagem",
        "pegaUmUsuarioPorEmail",
        "email",
        "usuario",
        "verificaUsuario",
        "Error",
        "verificaSenha",
        "MD5",
        "toString",
        "console",
        "log",
        "senhaValida",
        "login",
        "senha_hash",
        "token",
        "sign",
        "expiresIn",
        "set",
        "redirect",
        "logout",
        "module",
        "exports"
      ],
      "mappings": "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",
      "sourceRoot": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\controllers\\",
      "sourcesContent": [
        "const database = require('../models');\r\nconst bcrypt = require('bcrypt');\r\nconst jwt = require('jsonwebtoken');\r\nconst CHAVE_JWT=\"a/KeyBW7JqD++rTxKjX0hobwsH0GZpG2fsUDcvBrSRooLZbpIsxbCErAwFCStgZydGCRuYLiLFGRaBM6GM/FaRmSaAVw0yEeAyH1j0qoYdMh/BukSKKjvyLV9poMg7tD5tx7E8QI/7Fuf8uOS04kTMMavDBfNQUywhaF9c1jByIR9CAh6LHMf6G1OXCpUjlcVd+GwRc9qC20mAIA2MgD0PmN8w2AkMKm3WwMpOuQ/EgFTHQTSq1/1lrnjE4OTNHtmiadYoc7CWgMmoGW2dKFdw/GNNkJ7ZkYaMHe1HTOJ3xjB/jC4q/tiJcjbhdadscsQPa7br/evDcGGezmQX9pnQ==\";\r\n\r\nclass UsuarioController {\r\n\r\n    static async pegaTodosOsUsuarios(req, res) {\r\n        try {\r\n            const todosOsUsuarios = await database.Usuarios.findAll();\r\n            return res.status(200).json(todosOsUsuarios);\r\n        } catch (error) {\r\n            return res.status(500).json(error.message);\r\n        }\r\n    }\r\n    \r\n    static async pegaUmUsuario(req, res) {\r\n        const { id } = req.params;\r\n        try{\r\n            const umUsuario = await database.Usuarios.findOne( { \r\n                where: { \r\n                    id: Number(id) \r\n                } \r\n            });\r\n            return res.status(200).json(umUsuario);\r\n        } catch (error) {\r\n            return res.status(500).json(error.message);\r\n        }\r\n    }\r\n\r\n    static async gerarSenhaHash(senha){\r\n        const custoHash = 12;\r\n        return bcrypt.hash(senha, custoHash);\r\n    }\r\n\r\n    static validaSenha(senha){\r\n        return true;\r\n        //throw new Error(\"Senha inválida\");\r\n    }\r\n\r\n    static async criaUsuario(req, res) {\r\n        const novoUsuario = req.body;\r\n        try{\r\n\r\n            UsuarioController.validaSenha(novoUsuario.senha);\r\n            const senhaHash = await UsuarioController.gerarSenhaHash(novoUsuario.senha);\r\n            delete novoUsuario.senha;\r\n            novoUsuario[\"senha_hash\"] = senhaHash;\r\n            const novoUsuarioCriado = await database.Usuarios.create(novoUsuario);\r\n\r\n            return res.status(200).json(novoUsuarioCriado);\r\n        } catch (error) {\r\n            return res.status(500).json(error.message);\r\n        }\r\n\r\n    }\r\n\r\n    static async atualizaUsuario(req, res) {\r\n        const novasInfosUsuario = req.body;\r\n        const { id } = req.params;\r\n        try{\r\n            await database.Usuarios.update(novasInfosUsuario, { where: { id: Number(id) } });\r\n            const usuarioAtualizado = await database.Usuarios.findOne( { where: { id: Number(id) } });\r\n            return res.status(200).json(usuarioAtualizado);\r\n            \r\n        } catch (error) {\r\n            return res.status(500).json(error.message);\r\n        }\r\n    }\r\n\r\n    static async apagarUsuario(req, res) {\r\n        const { id } = req.params;\r\n        try{\r\n            await database.Usuarios.destroy({ where: { id: Number(id) } });\r\n            return res.status(200).json( { mensagem: `id ${id} deletado`} );\r\n        } catch (error) {\r\n            return res.status(500).json(error.message);\r\n        }\r\n    }  \r\n\r\n    static async pegaUmUsuarioPorEmail(email) {\r\n        try{\r\n            const usuario = await database.Usuarios.findOne( { \r\n                where: { \r\n                    email: email\r\n                } \r\n            });\r\n            return usuario;\r\n        } catch (error) {\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    static verificaUsuario(usuario){\r\n        if (!usuario){\r\n            throw new Error(\"Usuário não encontrado\");\r\n        }\r\n    }\r\n\r\n    static async verificaSenha(senha, senhaHash){\r\n        \r\n        var MD5 = require(\"crypto-js/md5\");\r\n        const hash = MD5(senha).toString()\r\n        console.log(hash);\r\n        let senhaValida = false;\r\n        console.log(senhaHash);\r\n        if(hash === senhaHash){\r\n             senhaValida = true;\r\n        }\r\n       \r\n        console.log(hash);\r\n        console.log(senhaHash);\r\n        console.log(senhaValida);\r\n      \r\n      \r\n        if (!senhaValida)\r\n            throw new Error(\"Senha inválida!\");\r\n    }\r\n\r\n    static async login(req, res) {\r\n        const { email } = req.body;\r\n        const { senha } = req.body;\r\n        \r\n        try{\r\n            const usuario = await UsuarioController.pegaUmUsuarioPorEmail(email);\r\n            UsuarioController.verificaUsuario(usuario);\r\n            await UsuarioController.verificaSenha(senha, usuario.senha_hash);       \r\n            console.log(CHAVE_JWT);\r\n            const token = jwt.sign({ id: usuario.id }, CHAVE_JWT, { expiresIn: '15m' });    \r\n            res.set('Authorization', token);  \r\n            return  res.redirect('/logado'); \r\n            \r\n        } catch (error) {\r\n            return res.status(401).json(error.message);\r\n        }\r\n    }\r\n    static async logout(req, res) {\r\n        \r\n        }\r\n\r\n}\r\n\r\nmodule.exports = UsuarioController"
      ]
    },
    "sourceType": "module",
    "mtime": 1639193528868
  },
  "{\"assumptions\":{},\"sourceRoot\":\"C:\\\\Users\\\\rafae\\\\Desktop\\\\web3\\\\projetoweb-negritude-em-debate\\\\api\\\\config\\\\\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"C:\\\\Users\\\\rafae\\\\Desktop\\\\web3\\\\projetoweb-negritude-em-debate\",\"filename\":\"C:\\\\Users\\\\rafae\\\\Desktop\\\\web3\\\\projetoweb-negritude-em-debate\\\\api\\\\config\\\\multerStoreConfig.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"C:\\\\Users\\\\rafae\\\\Desktop\\\\web3\\\\projetoweb-negritude-em-debate\",\"rootMode\":\"root\",\"plugins\":[],\"presets\":[]}:7.15.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\config\\",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate",
      "filename": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\config\\multerStoreConfig.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate",
      "rootMode": "root",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\config\\multerStoreConfig.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\config\\multerStoreConfig.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\config\\",
        "sourceFileName": "multerStoreConfig.js"
      }
    },
    "ast": null,
    "code": "const multer = require('multer');\n\nconst mime = require('mime-types');\n\nconst storage = multer.diskStorage({\n  destination: (request, file, cb) => {\n    cb(null, 'uploads/');\n  },\n  filename: (request, file, cb) => {\n    cb(null, `photo-${Date.now()}.${mime.extension(file.mimetype)}`);\n  }\n});\nmodule.exports = storage;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm11bHRlclN0b3JlQ29uZmlnLmpzIl0sIm5hbWVzIjpbIm11bHRlciIsInJlcXVpcmUiLCJtaW1lIiwic3RvcmFnZSIsImRpc2tTdG9yYWdlIiwiZGVzdGluYXRpb24iLCJyZXF1ZXN0IiwiZmlsZSIsImNiIiwiZmlsZW5hbWUiLCJEYXRlIiwibm93IiwiZXh0ZW5zaW9uIiwibWltZXR5cGUiLCJtb2R1bGUiLCJleHBvcnRzIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxNQUFNLEdBQUdDLE9BQU8sQ0FBQyxRQUFELENBQXRCOztBQUNBLE1BQU1DLElBQUksR0FBR0QsT0FBTyxDQUFDLFlBQUQsQ0FBcEI7O0FBRUEsTUFBTUUsT0FBTyxHQUFHSCxNQUFNLENBQUNJLFdBQVAsQ0FBbUI7QUFDakNDLEVBQUFBLFdBQVcsRUFBRSxDQUFDQyxPQUFELEVBQVVDLElBQVYsRUFBZ0JDLEVBQWhCLEtBQXVCO0FBQ2xDQSxJQUFBQSxFQUFFLENBQUMsSUFBRCxFQUFPLFVBQVAsQ0FBRjtBQUNELEdBSGdDO0FBSWpDQyxFQUFBQSxRQUFRLEVBQUUsQ0FBQ0gsT0FBRCxFQUFVQyxJQUFWLEVBQWdCQyxFQUFoQixLQUF1QjtBQUMvQkEsSUFBQUEsRUFBRSxDQUFDLElBQUQsRUFBUSxTQUFTRSxJQUFJLENBQUNDLEdBQUwsRUFBWSxJQUFJVCxJQUFJLENBQUNVLFNBQUwsQ0FBZUwsSUFBSSxDQUFDTSxRQUFwQixDQUErQixFQUFoRSxDQUFGO0FBQ0Q7QUFOZ0MsQ0FBbkIsQ0FBaEI7QUFTQUMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCWixPQUFqQiIsInNvdXJjZVJvb3QiOiJDOlxcVXNlcnNcXHJhZmFlXFxEZXNrdG9wXFx3ZWIzXFxwcm9qZXRvd2ViLW5lZ3JpdHVkZS1lbS1kZWJhdGVcXGFwaVxcY29uZmlnXFwiLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBtdWx0ZXIgPSByZXF1aXJlKCdtdWx0ZXInKTtcclxuY29uc3QgbWltZSA9IHJlcXVpcmUoJ21pbWUtdHlwZXMnKTtcclxuXHJcbmNvbnN0IHN0b3JhZ2UgPSBtdWx0ZXIuZGlza1N0b3JhZ2Uoe1xyXG4gIGRlc3RpbmF0aW9uOiAocmVxdWVzdCwgZmlsZSwgY2IpID0+IHtcclxuICAgIGNiKG51bGwsICd1cGxvYWRzLycpO1xyXG4gIH0sXHJcbiAgZmlsZW5hbWU6IChyZXF1ZXN0LCBmaWxlLCBjYikgPT4ge1xyXG4gICAgY2IobnVsbCwgYHBob3RvLSR7IERhdGUubm93KCkgfS4keyBtaW1lLmV4dGVuc2lvbihmaWxlLm1pbWV0eXBlKSB9YCk7XHJcbiAgfVxyXG59KTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gc3RvcmFnZTsiXX0=",
    "map": {
      "version": 3,
      "sources": [
        "multerStoreConfig.js"
      ],
      "names": [
        "multer",
        "require",
        "mime",
        "storage",
        "diskStorage",
        "destination",
        "request",
        "file",
        "cb",
        "filename",
        "Date",
        "now",
        "extension",
        "mimetype",
        "module",
        "exports"
      ],
      "mappings": "AAAA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AACA,MAAMC,IAAI,GAAGD,OAAO,CAAC,YAAD,CAApB;;AAEA,MAAME,OAAO,GAAGH,MAAM,CAACI,WAAP,CAAmB;AACjCC,EAAAA,WAAW,EAAE,CAACC,OAAD,EAAUC,IAAV,EAAgBC,EAAhB,KAAuB;AAClCA,IAAAA,EAAE,CAAC,IAAD,EAAO,UAAP,CAAF;AACD,GAHgC;AAIjCC,EAAAA,QAAQ,EAAE,CAACH,OAAD,EAAUC,IAAV,EAAgBC,EAAhB,KAAuB;AAC/BA,IAAAA,EAAE,CAAC,IAAD,EAAQ,SAASE,IAAI,CAACC,GAAL,EAAY,IAAIT,IAAI,CAACU,SAAL,CAAeL,IAAI,CAACM,QAApB,CAA+B,EAAhE,CAAF;AACD;AANgC,CAAnB,CAAhB;AASAC,MAAM,CAACC,OAAP,GAAiBZ,OAAjB",
      "sourceRoot": "C:\\Users\\rafae\\Desktop\\web3\\projetoweb-negritude-em-debate\\api\\config\\",
      "sourcesContent": [
        "const multer = require('multer');\r\nconst mime = require('mime-types');\r\n\r\nconst storage = multer.diskStorage({\r\n  destination: (request, file, cb) => {\r\n    cb(null, 'uploads/');\r\n  },\r\n  filename: (request, file, cb) => {\r\n    cb(null, `photo-${ Date.now() }.${ mime.extension(file.mimetype) }`);\r\n  }\r\n});\r\n\r\nmodule.exports = storage;"
      ]
    },
    "sourceType": "module",
    "mtime": 1639087827248
  }
}